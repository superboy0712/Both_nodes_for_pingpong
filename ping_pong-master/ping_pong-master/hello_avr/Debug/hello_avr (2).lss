
hello_avr (2).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000dc  00800100  00001354  000013e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001354  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  008001dc  008001dc  000014c4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000014c4  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000220  00000000  00000000  00001520  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002f76  00000000  00000000  00001740  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000d2a  00000000  00000000  000046b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000bb5  00000000  00000000  000053e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000004e4  00000000  00000000  00005f98  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000007d0  00000000  00000000  0000647c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000014c0  00000000  00000000  00006c4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000268  00000000  00000000  0000810c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__ctors_end>
       4:	0c 94 43 05 	jmp	0xa86	; 0xa86 <__vector_1>
       8:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
       c:	0c 94 2c 05 	jmp	0xa58	; 0xa58 <__vector_3>
      10:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      14:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      18:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      1c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      20:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      24:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      28:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      2c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      30:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      34:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      38:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      3c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      40:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      44:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      48:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      4c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      50:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      54:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      58:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      5c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      60:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      64:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      68:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
      6c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	00 00       	nop
      72:	00 00       	nop
      74:	00 00       	nop
      76:	00 5e       	subi	r16, 0xE0	; 224
      78:	00 00       	nop
      7a:	00 0e       	add	r0, r16
      7c:	00 0e       	add	r0, r16
      7e:	00 28       	or	r0, r0
      80:	7c 28       	or	r7, r12
      82:	7c 28       	or	r7, r12
      84:	08 54       	subi	r16, 0x48	; 72
      86:	7c 54       	subi	r23, 0x4C	; 76
      88:	20 26       	eor	r2, r16
      8a:	10 08       	sbc	r1, r0
      8c:	64 00       	.word	0x0064	; ????
      8e:	28 54       	subi	r18, 0x48	; 72
      90:	28 40       	sbci	r18, 0x08	; 8
      92:	00 00       	nop
      94:	00 0e       	add	r0, r16
      96:	00 00       	nop
      98:	00 3c       	cpi	r16, 0xC0	; 192
      9a:	42 00       	.word	0x0042	; ????
      9c:	00 00       	nop
      9e:	42 3c       	cpi	r20, 0xC2	; 194
      a0:	00 00       	nop
      a2:	00 54       	subi	r16, 0x40	; 64
      a4:	38 54       	subi	r19, 0x48	; 72
      a6:	00 10       	cpse	r0, r0
      a8:	10 7c       	andi	r17, 0xC0	; 192
      aa:	10 10       	cpse	r1, r0
      ac:	00 80       	ld	r0, Z
      ae:	60 20       	and	r6, r0
      b0:	00 10       	cpse	r0, r0
      b2:	10 10       	cpse	r1, r0
      b4:	10 00       	.word	0x0010	; ????
      b6:	00 60       	ori	r16, 0x00	; 0
      b8:	60 00       	.word	0x0060	; ????
      ba:	00 20       	and	r0, r0
      bc:	10 08       	sbc	r1, r0
      be:	04 00       	.word	0x0004	; ????
      c0:	00 3c       	cpi	r16, 0xC0	; 192
      c2:	42 3c       	cpi	r20, 0xC2	; 194
      c4:	00 00       	nop
      c6:	44 7e       	andi	r20, 0xE4	; 228
      c8:	40 00       	.word	0x0040	; ????
      ca:	44 62       	ori	r20, 0x24	; 36
      cc:	52 4c       	sbci	r21, 0xC2	; 194
      ce:	00 22       	and	r0, r16
      d0:	4a 4a       	sbci	r20, 0xAA	; 170
      d2:	36 00       	.word	0x0036	; ????
      d4:	18 14       	cp	r1, r8
      d6:	7e 10       	cpse	r7, r14
      d8:	00 2e       	mov	r0, r16
      da:	4a 4a       	sbci	r20, 0xAA	; 170
      dc:	32 00       	.word	0x0032	; ????
      de:	3c 4a       	sbci	r19, 0xAC	; 172
      e0:	4a 30       	cpi	r20, 0x0A	; 10
      e2:	00 02       	muls	r16, r16
      e4:	62 1a       	sub	r6, r18
      e6:	06 00       	.word	0x0006	; ????
      e8:	34 4a       	sbci	r19, 0xA4	; 164
      ea:	4a 34       	cpi	r20, 0x4A	; 74
      ec:	00 0c       	add	r0, r0
      ee:	52 52       	subi	r21, 0x22	; 34
      f0:	3c 00       	.word	0x003c	; ????
      f2:	00 6c       	ori	r16, 0xC0	; 192
      f4:	6c 00       	.word	0x006c	; ????
      f6:	00 80       	ld	r0, Z
      f8:	6c 2c       	mov	r6, r12
      fa:	00 00       	nop
      fc:	00 10       	cpse	r0, r0
      fe:	28 44       	sbci	r18, 0x48	; 72
     100:	00 28       	or	r0, r0
     102:	28 28       	or	r2, r8
     104:	28 00       	.word	0x0028	; ????
     106:	00 44       	sbci	r16, 0x40	; 64
     108:	28 10       	cpse	r2, r8
     10a:	00 00       	nop
     10c:	04 52       	subi	r16, 0x24	; 36
     10e:	0c 00       	.word	0x000c	; ????
     110:	3c 42       	sbci	r19, 0x2C	; 44
     112:	5a 1c       	adc	r5, r10
     114:	00 7c       	andi	r16, 0xC0	; 192
     116:	12 12       	cpse	r1, r18
     118:	7c 00       	.word	0x007c	; ????
     11a:	7e 4a       	sbci	r23, 0xAE	; 174
     11c:	4a 34       	cpi	r20, 0x4A	; 74
     11e:	00 3c       	cpi	r16, 0xC0	; 192
     120:	42 42       	sbci	r20, 0x22	; 34
     122:	24 00       	.word	0x0024	; ????
     124:	7e 42       	sbci	r23, 0x2E	; 46
     126:	42 3c       	cpi	r20, 0xC2	; 194
     128:	00 7e       	andi	r16, 0xE0	; 224
     12a:	4a 4a       	sbci	r20, 0xAA	; 170
     12c:	42 00       	.word	0x0042	; ????
     12e:	7e 0a       	sbc	r7, r30
     130:	0a 02       	muls	r16, r26
     132:	00 3c       	cpi	r16, 0xC0	; 192
     134:	42 52       	subi	r20, 0x22	; 34
     136:	74 00       	.word	0x0074	; ????
     138:	7e 08       	sbc	r7, r14
     13a:	08 7e       	andi	r16, 0xE8	; 232
     13c:	00 00       	nop
     13e:	42 7e       	andi	r20, 0xE2	; 226
     140:	42 00       	.word	0x0042	; ????
     142:	20 40       	sbci	r18, 0x00	; 0
     144:	40 3e       	cpi	r20, 0xE0	; 224
     146:	00 7e       	andi	r16, 0xE0	; 224
     148:	18 24       	eor	r1, r8
     14a:	42 00       	.word	0x0042	; ????
     14c:	7e 40       	sbci	r23, 0x0E	; 14
     14e:	40 40       	sbci	r20, 0x00	; 0
     150:	00 7e       	andi	r16, 0xE0	; 224
     152:	0c 0c       	add	r0, r12
     154:	7e 00       	.word	0x007e	; ????
     156:	7e 0c       	add	r7, r14
     158:	30 7e       	andi	r19, 0xE0	; 224
     15a:	00 3c       	cpi	r16, 0xC0	; 192
     15c:	42 42       	sbci	r20, 0x22	; 34
     15e:	3c 00       	.word	0x003c	; ????
     160:	7e 12       	cpse	r7, r30
     162:	12 0c       	add	r1, r2
     164:	00 3c       	cpi	r16, 0xC0	; 192
     166:	62 42       	sbci	r22, 0x22	; 34
     168:	bc 00       	.word	0x00bc	; ????
     16a:	7e 12       	cpse	r7, r30
     16c:	32 4c       	sbci	r19, 0xC2	; 194
     16e:	00 24       	eor	r0, r0
     170:	4a 52       	subi	r20, 0x2A	; 42
     172:	24 00       	.word	0x0024	; ????
     174:	00 02       	muls	r16, r16
     176:	7e 02       	muls	r23, r30
     178:	00 3e       	cpi	r16, 0xE0	; 224
     17a:	40 40       	sbci	r20, 0x00	; 0
     17c:	3e 00       	.word	0x003e	; ????
     17e:	1e 60       	ori	r17, 0x0E	; 14
     180:	60 1e       	adc	r6, r16
     182:	00 7e       	andi	r16, 0xE0	; 224
     184:	30 30       	cpi	r19, 0x00	; 0
     186:	7e 00       	.word	0x007e	; ????
     188:	66 18       	sub	r6, r6
     18a:	18 66       	ori	r17, 0x68	; 104
     18c:	00 00       	nop
     18e:	0e 70       	andi	r16, 0x0E	; 14
     190:	0e 00       	.word	0x000e	; ????
     192:	62 52       	subi	r22, 0x22	; 34
     194:	4a 46       	sbci	r20, 0x6A	; 106
     196:	00 00       	nop
     198:	7e 42       	sbci	r23, 0x2E	; 46
     19a:	42 00       	.word	0x0042	; ????
     19c:	04 08       	sbc	r0, r4
     19e:	10 20       	and	r1, r0
     1a0:	00 00       	nop
     1a2:	42 42       	sbci	r20, 0x22	; 34
     1a4:	7e 00       	.word	0x007e	; ????
     1a6:	00 04       	cpc	r0, r0
     1a8:	02 04       	cpc	r0, r2
     1aa:	00 40       	sbci	r16, 0x00	; 0
     1ac:	40 40       	sbci	r20, 0x00	; 0
     1ae:	40 00       	.word	0x0040	; ????
     1b0:	00 02       	muls	r16, r16
     1b2:	04 00       	.word	0x0004	; ????
     1b4:	00 30       	cpi	r16, 0x00	; 0
     1b6:	48 28       	or	r4, r8
     1b8:	78 00       	.word	0x0078	; ????
     1ba:	7e 48       	sbci	r23, 0x8E	; 142
     1bc:	48 30       	cpi	r20, 0x08	; 8
     1be:	00 30       	cpi	r16, 0x00	; 0
     1c0:	48 48       	sbci	r20, 0x88	; 136
     1c2:	00 00       	nop
     1c4:	30 48       	sbci	r19, 0x80	; 128
     1c6:	48 7e       	andi	r20, 0xE8	; 232
     1c8:	00 30       	cpi	r16, 0x00	; 0
     1ca:	68 58       	subi	r22, 0x88	; 136
     1cc:	10 00       	.word	0x0010	; ????
     1ce:	10 7c       	andi	r17, 0xC0	; 192
     1d0:	12 04       	cpc	r1, r2
     1d2:	00 50       	subi	r16, 0x00	; 0
     1d4:	a8 a8       	ldd	r10, Y+48	; 0x30
     1d6:	98 00       	.word	0x0098	; ????
     1d8:	7e 08       	sbc	r7, r14
     1da:	08 70       	andi	r16, 0x08	; 8
     1dc:	00 00       	nop
     1de:	48 7a       	andi	r20, 0xA8	; 168
     1e0:	40 00       	.word	0x0040	; ????
     1e2:	00 40       	sbci	r16, 0x00	; 0
     1e4:	80 7a       	andi	r24, 0xA0	; 160
     1e6:	00 7e       	andi	r16, 0xE0	; 224
     1e8:	10 28       	or	r1, r0
     1ea:	40 00       	.word	0x0040	; ????
     1ec:	00 42       	sbci	r16, 0x20	; 32
     1ee:	7e 40       	sbci	r23, 0x0E	; 14
     1f0:	00 78       	andi	r16, 0x80	; 128
     1f2:	10 18       	sub	r1, r0
     1f4:	70 00       	.word	0x0070	; ????
     1f6:	78 08       	sbc	r7, r8
     1f8:	08 70       	andi	r16, 0x08	; 8
     1fa:	00 30       	cpi	r16, 0x00	; 0
     1fc:	48 48       	sbci	r20, 0x88	; 136
     1fe:	30 00       	.word	0x0030	; ????
     200:	f8 48       	sbci	r31, 0x88	; 136
     202:	48 30       	cpi	r20, 0x08	; 8
     204:	00 30       	cpi	r16, 0x00	; 0
     206:	48 48       	sbci	r20, 0x88	; 136
     208:	f8 00       	.word	0x00f8	; ????
     20a:	78 08       	sbc	r7, r8
     20c:	08 10       	cpse	r0, r8
     20e:	00 50       	subi	r16, 0x00	; 0
     210:	58 68       	ori	r21, 0x88	; 136
     212:	28 00       	.word	0x0028	; ????
     214:	08 3e       	cpi	r16, 0xE8	; 232
     216:	48 40       	sbci	r20, 0x08	; 8
     218:	00 38       	cpi	r16, 0x80	; 128
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	78 00       	.word	0x0078	; ????
     21e:	00 38       	cpi	r16, 0x80	; 128
     220:	40 38       	cpi	r20, 0x80	; 128
     222:	00 78       	andi	r16, 0x80	; 128
     224:	60 60       	ori	r22, 0x00	; 0
     226:	78 00       	.word	0x0078	; ????
     228:	48 30       	cpi	r20, 0x08	; 8
     22a:	30 48       	sbci	r19, 0x80	; 128
     22c:	00 18       	sub	r0, r0
     22e:	a0 40       	sbci	r26, 0x00	; 0
     230:	38 00       	.word	0x0038	; ????
     232:	48 68       	ori	r20, 0x88	; 136
     234:	58 48       	sbci	r21, 0x88	; 136
     236:	00 00       	nop
     238:	08 3c       	cpi	r16, 0xC8	; 200
     23a:	42 00       	.word	0x0042	; ????
     23c:	00 00       	nop
     23e:	7e 00       	.word	0x007e	; ????
     240:	00 00       	nop
     242:	42 3c       	cpi	r20, 0xC2	; 194
     244:	08 00       	.word	0x0008	; ????
     246:	04 02       	muls	r16, r20
     248:	04 02       	muls	r16, r20
	...

0000024c <__ctors_end>:
     24c:	11 24       	eor	r1, r1
     24e:	1f be       	out	0x3f, r1	; 63
     250:	cf ef       	ldi	r28, 0xFF	; 255
     252:	d4 e0       	ldi	r29, 0x04	; 4
     254:	de bf       	out	0x3e, r29	; 62
     256:	cd bf       	out	0x3d, r28	; 61

00000258 <__do_copy_data>:
     258:	11 e0       	ldi	r17, 0x01	; 1
     25a:	a0 e0       	ldi	r26, 0x00	; 0
     25c:	b1 e0       	ldi	r27, 0x01	; 1
     25e:	e4 e5       	ldi	r30, 0x54	; 84
     260:	f3 e1       	ldi	r31, 0x13	; 19
     262:	02 c0       	rjmp	.+4      	; 0x268 <__do_copy_data+0x10>
     264:	05 90       	lpm	r0, Z+
     266:	0d 92       	st	X+, r0
     268:	ac 3d       	cpi	r26, 0xDC	; 220
     26a:	b1 07       	cpc	r27, r17
     26c:	d9 f7       	brne	.-10     	; 0x264 <__do_copy_data+0xc>

0000026e <__do_clear_bss>:
     26e:	21 e0       	ldi	r18, 0x01	; 1
     270:	ac ed       	ldi	r26, 0xDC	; 220
     272:	b1 e0       	ldi	r27, 0x01	; 1
     274:	01 c0       	rjmp	.+2      	; 0x278 <.do_clear_bss_start>

00000276 <.do_clear_bss_loop>:
     276:	1d 92       	st	X+, r1

00000278 <.do_clear_bss_start>:
     278:	aa 3e       	cpi	r26, 0xEA	; 234
     27a:	b2 07       	cpc	r27, r18
     27c:	e1 f7       	brne	.-8      	; 0x276 <.do_clear_bss_loop>
     27e:	0e 94 41 04 	call	0x882	; 0x882 <main>
     282:	0c 94 a8 09 	jmp	0x1350	; 0x1350 <_exit>

00000286 <__bad_interrupt>:
     286:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000028a <adc_read>:
uint8_t adc_read(int channel)
{
	uint8_t data=0;
	int i=0;
	
	volatile uint8_t *p_write= (uint8_t *) (ADC_ADDR_START+channel);
     28a:	fc 01       	movw	r30, r24
     28c:	fc 5e       	subi	r31, 0xEC	; 236
	volatile uint8_t *p_read= (uint8_t*) (ADC_ADDR_START);
	*p_write=channel;		//select Channel of ADC
     28e:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     290:	26 ea       	ldi	r18, 0xA6	; 166
     292:	2a 95       	dec	r18
     294:	f1 f7       	brne	.-4      	; 0x292 <adc_read+0x8>
     296:	00 c0       	rjmp	.+0      	; 0x298 <adc_read+0xe>
	_delay_us(500);
	
	data=*p_read;		//read data from ADC
     298:	80 91 00 14 	lds	r24, 0x1400
	i=data;
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	36 ea       	ldi	r19, 0xA6	; 166
     2a0:	3a 95       	dec	r19
     2a2:	f1 f7       	brne	.-4      	; 0x2a0 <adc_read+0x16>
     2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <adc_read+0x1c>
	_delay_us(500);
	data=*p_read;		//read data from ADC
     2a6:	20 91 00 14 	lds	r18, 0x1400
	i+=data;
     2aa:	82 0f       	add	r24, r18
     2ac:	91 1d       	adc	r25, r1
     2ae:	26 ea       	ldi	r18, 0xA6	; 166
     2b0:	2a 95       	dec	r18
     2b2:	f1 f7       	brne	.-4      	; 0x2b0 <adc_read+0x26>
     2b4:	00 c0       	rjmp	.+0      	; 0x2b6 <adc_read+0x2c>
	_delay_us(500);
	data=*p_read;		//read data from ADC
     2b6:	20 91 00 14 	lds	r18, 0x1400
     2ba:	36 ea       	ldi	r19, 0xA6	; 166
     2bc:	3a 95       	dec	r19
     2be:	f1 f7       	brne	.-4      	; 0x2bc <adc_read+0x32>
     2c0:	00 c0       	rjmp	.+0      	; 0x2c2 <adc_read+0x38>
	i+=data;
     2c2:	82 0f       	add	r24, r18
     2c4:	91 1d       	adc	r25, r1
	_delay_us(500);

	data=(uint8_t) (i/3);		//Average 3 samples
     2c6:	63 e0       	ldi	r22, 0x03	; 3
     2c8:	70 e0       	ldi	r23, 0x00	; 0
     2ca:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <__divmodhi4>
     2ce:	86 2f       	mov	r24, r22
	return data;
	
}
     2d0:	08 95       	ret

000002d2 <adc_calibrate>:
	
	
	volatile uint8_t *p_read= (uint8_t *) (ADC_ADDR_START);
	
	
	data=*p_read;		//read data from ADC
     2d2:	80 91 00 14 	lds	r24, 0x1400
     2d6:	8a e0       	ldi	r24, 0x0A	; 10
     2d8:	90 e0       	ldi	r25, 0x00	; 0
}

uint8_t adc_calibrate(int channel)
{
	uint8_t data=0;
	uint16_t i=0;
     2da:	20 e0       	ldi	r18, 0x00	; 0
     2dc:	30 e0       	ldi	r19, 0x00	; 0
	
	
	data=*p_read;		//read data from ADC
	int j;
	for(j = 0; j< 10; j++){
		data=*p_read;
     2de:	e0 e0       	ldi	r30, 0x00	; 0
     2e0:	f4 e1       	ldi	r31, 0x14	; 20
     2e2:	40 81       	ld	r20, Z
		i+=data;
     2e4:	24 0f       	add	r18, r20
     2e6:	31 1d       	adc	r19, r1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2e8:	a7 ea       	ldi	r26, 0xA7	; 167
     2ea:	b1 e6       	ldi	r27, 0x61	; 97
     2ec:	11 97       	sbiw	r26, 0x01	; 1
     2ee:	f1 f7       	brne	.-4      	; 0x2ec <adc_calibrate+0x1a>
     2f0:	00 c0       	rjmp	.+0      	; 0x2f2 <adc_calibrate+0x20>
     2f2:	00 00       	nop
     2f4:	01 97       	sbiw	r24, 0x01	; 1
	volatile uint8_t *p_read= (uint8_t *) (ADC_ADDR_START);
	
	
	data=*p_read;		//read data from ADC
	int j;
	for(j = 0; j< 10; j++){
     2f6:	00 97       	sbiw	r24, 0x00	; 0
     2f8:	a1 f7       	brne	.-24     	; 0x2e2 <adc_calibrate+0x10>
		data=*p_read;
		i+=data;
		_delay_ms(100);	
	}
	data=(uint8_t) (i/10);			//Average 10 samples
     2fa:	ad ec       	ldi	r26, 0xCD	; 205
     2fc:	bc ec       	ldi	r27, 0xCC	; 204
     2fe:	0e 94 8e 06 	call	0xd1c	; 0xd1c <__umulhisi3>
     302:	96 95       	lsr	r25
     304:	87 95       	ror	r24
     306:	96 95       	lsr	r25
     308:	87 95       	ror	r24
     30a:	96 95       	lsr	r25
     30c:	87 95       	ror	r24
	return data;
	
}
     30e:	08 95       	ret

00000310 <adc_init>:

static uint8_t x_mean=0,y_mean=0;

void adc_init(void)
{
	MCUCR |= (1<<SRE);		//Enable XMEM interface
     310:	85 b7       	in	r24, 0x35	; 53
     312:	80 68       	ori	r24, 0x80	; 128
     314:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1<<XMM2);		//Mask out higher 4 bits of address
     316:	80 b7       	in	r24, 0x30	; 48
     318:	80 62       	ori	r24, 0x20	; 32
     31a:	80 bf       	out	0x30, r24	; 48
	x_mean=adc_calibrate(X_CH);
     31c:	86 e0       	ldi	r24, 0x06	; 6
     31e:	90 e0       	ldi	r25, 0x00	; 0
     320:	0e 94 69 01 	call	0x2d2	; 0x2d2 <adc_calibrate>
     324:	80 93 dd 01 	sts	0x01DD, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     328:	80 e1       	ldi	r24, 0x10	; 16
     32a:	8a 95       	dec	r24
     32c:	f1 f7       	brne	.-4      	; 0x32a <adc_init+0x1a>
     32e:	00 c0       	rjmp	.+0      	; 0x330 <adc_init+0x20>
	_delay_us(50);
	y_mean=adc_calibrate(Y_CH);
     330:	84 e0       	ldi	r24, 0x04	; 4
     332:	90 e0       	ldi	r25, 0x00	; 0
     334:	0e 94 69 01 	call	0x2d2	; 0x2d2 <adc_calibrate>
     338:	80 93 dc 01 	sts	0x01DC, r24
     33c:	80 e1       	ldi	r24, 0x10	; 16
     33e:	8a 95       	dec	r24
     340:	f1 f7       	brne	.-4      	; 0x33e <adc_init+0x2e>
     342:	00 c0       	rjmp	.+0      	; 0x344 <adc_init+0x34>
     344:	08 95       	ret

00000346 <position>:
	
}

void position(signed int *x_val,signed int *y_val,uint8_t x_mean,uint8_t y_mean)
{
	*x_val=(signed int) ((*x_val-x_mean)*100/128);
     346:	dc 01       	movw	r26, r24
     348:	ed 91       	ld	r30, X+
     34a:	fc 91       	ld	r31, X
     34c:	e4 1b       	sub	r30, r20
     34e:	f1 09       	sbc	r31, r1
     350:	34 e6       	ldi	r19, 0x64	; 100
     352:	3e 9f       	mul	r19, r30
     354:	a0 01       	movw	r20, r0
     356:	3f 9f       	mul	r19, r31
     358:	50 0d       	add	r21, r0
     35a:	11 24       	eor	r1, r1
     35c:	55 23       	and	r21, r21
     35e:	14 f4       	brge	.+4      	; 0x364 <position+0x1e>
     360:	41 58       	subi	r20, 0x81	; 129
     362:	5f 4f       	sbci	r21, 0xFF	; 255
     364:	44 0f       	add	r20, r20
     366:	45 2f       	mov	r20, r21
     368:	44 1f       	adc	r20, r20
     36a:	55 0b       	sbc	r21, r21
     36c:	fc 01       	movw	r30, r24
     36e:	51 83       	std	Z+1, r21	; 0x01
     370:	40 83       	st	Z, r20
	*y_val=(signed int) ((*y_val-y_mean)*100/128);
     372:	db 01       	movw	r26, r22
     374:	8d 91       	ld	r24, X+
     376:	9c 91       	ld	r25, X
     378:	fc 01       	movw	r30, r24
     37a:	e2 1b       	sub	r30, r18
     37c:	f1 09       	sbc	r31, r1
     37e:	44 e6       	ldi	r20, 0x64	; 100
     380:	4e 9f       	mul	r20, r30
     382:	c0 01       	movw	r24, r0
     384:	4f 9f       	mul	r20, r31
     386:	90 0d       	add	r25, r0
     388:	11 24       	eor	r1, r1
     38a:	99 23       	and	r25, r25
     38c:	14 f4       	brge	.+4      	; 0x392 <position+0x4c>
     38e:	81 58       	subi	r24, 0x81	; 129
     390:	9f 4f       	sbci	r25, 0xFF	; 255
     392:	88 0f       	add	r24, r24
     394:	89 2f       	mov	r24, r25
     396:	88 1f       	adc	r24, r24
     398:	99 0b       	sbc	r25, r25
     39a:	db 01       	movw	r26, r22
     39c:	8d 93       	st	X+, r24
     39e:	9c 93       	st	X, r25
     3a0:	08 95       	ret

000003a2 <adc_get_position>:
}

//struct adc_pos {int16_t x; int16_t y;};
	
struct adc_pos adc_get_position(void){
     3a2:	cf 93       	push	r28
     3a4:	df 93       	push	r29
     3a6:	00 d0       	rcall	.+0      	; 0x3a8 <adc_get_position+0x6>
     3a8:	00 d0       	rcall	.+0      	; 0x3aa <adc_get_position+0x8>
     3aa:	00 d0       	rcall	.+0      	; 0x3ac <adc_get_position+0xa>
     3ac:	cd b7       	in	r28, 0x3d	; 61
     3ae:	de b7       	in	r29, 0x3e	; 62
	struct adc_pos pos;

	int raw;

	pos.x = adc_read(X_CH)-x_mean;
     3b0:	86 e0       	ldi	r24, 0x06	; 6
     3b2:	90 e0       	ldi	r25, 0x00	; 0
     3b4:	0e 94 45 01 	call	0x28a	; 0x28a <adc_read>
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	20 91 dd 01 	lds	r18, 0x01DD
     3be:	82 1b       	sub	r24, r18
     3c0:	91 09       	sbc	r25, r1
     3c2:	9a 83       	std	Y+2, r25	; 0x02
     3c4:	89 83       	std	Y+1, r24	; 0x01
	pos.y = adc_read(Y_CH);//-y_mean;
     3c6:	84 e0       	ldi	r24, 0x04	; 4
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	0e 94 45 01 	call	0x28a	; 0x28a <adc_read>
     3ce:	90 e0       	ldi	r25, 0x00	; 0
     3d0:	9c 83       	std	Y+4, r25	; 0x04
     3d2:	8b 83       	std	Y+3, r24	; 0x03
	position(&(pos.x),&(raw), x_mean, y_mean);
     3d4:	20 91 dc 01 	lds	r18, 0x01DC
     3d8:	40 91 dd 01 	lds	r20, 0x01DD
     3dc:	be 01       	movw	r22, r28
     3de:	6b 5f       	subi	r22, 0xFB	; 251
     3e0:	7f 4f       	sbci	r23, 0xFF	; 255
     3e2:	ce 01       	movw	r24, r28
     3e4:	01 96       	adiw	r24, 0x01	; 1
     3e6:	0e 94 a3 01 	call	0x346	; 0x346 <position>
	pos.x+=90;
     3ea:	89 81       	ldd	r24, Y+1	; 0x01
     3ec:	9a 81       	ldd	r25, Y+2	; 0x02
     3ee:	86 5a       	subi	r24, 0xA6	; 166
     3f0:	9f 4f       	sbci	r25, 0xFF	; 255
     3f2:	9a 83       	std	Y+2, r25	; 0x02
     3f4:	89 83       	std	Y+1, r24	; 0x01
	//
	return pos;
     3f6:	69 81       	ldd	r22, Y+1	; 0x01
     3f8:	7a 81       	ldd	r23, Y+2	; 0x02
     3fa:	8b 81       	ldd	r24, Y+3	; 0x03
     3fc:	9c 81       	ldd	r25, Y+4	; 0x04
     3fe:	26 96       	adiw	r28, 0x06	; 6
     400:	0f b6       	in	r0, 0x3f	; 63
     402:	f8 94       	cli
     404:	de bf       	out	0x3e, r29	; 62
     406:	0f be       	out	0x3f, r0	; 63
     408:	cd bf       	out	0x3d, r28	; 61
     40a:	df 91       	pop	r29
     40c:	cf 91       	pop	r28
     40e:	08 95       	ret

00000410 <spi_config>:
     410:	87 b3       	in	r24, 0x17	; 23
     412:	80 6b       	ori	r24, 0xB0	; 176
     414:	87 bb       	out	0x17, r24	; 23
     416:	c4 9a       	sbi	0x18, 4	; 24
     418:	8d b1       	in	r24, 0x0d	; 13
     41a:	80 65       	ori	r24, 0x50	; 80
     41c:	8d b9       	out	0x0d, r24	; 13
     41e:	08 95       	ret

00000420 <spi_chipselect>:
     420:	81 30       	cpi	r24, 0x01	; 1
     422:	11 f4       	brne	.+4      	; 0x428 <spi_chipselect+0x8>
     424:	c4 98       	cbi	0x18, 4	; 24
     426:	08 95       	ret
     428:	c4 9a       	sbi	0x18, 4	; 24
     42a:	08 95       	ret

0000042c <spi_tx_rx>:
     42c:	8f b9       	out	0x0f, r24	; 15
     42e:	77 9b       	sbis	0x0e, 7	; 14
     430:	fe cf       	rjmp	.-4      	; 0x42e <spi_tx_rx+0x2>
     432:	8f b1       	in	r24, 0x0f	; 15
     434:	08 95       	ret

00000436 <can_reset>:
     436:	81 e0       	ldi	r24, 0x01	; 1
     438:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     43c:	80 ec       	ldi	r24, 0xC0	; 192
     43e:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     442:	80 e0       	ldi	r24, 0x00	; 0
     444:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     448:	08 95       	ret

0000044a <can_rx_if_clear>:
     44a:	81 e0       	ldi	r24, 0x01	; 1
     44c:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     450:	85 e0       	ldi	r24, 0x05	; 5
     452:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     456:	8c e2       	ldi	r24, 0x2C	; 44
     458:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     45c:	8f ef       	ldi	r24, 0xFF	; 255
     45e:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     462:	80 e0       	ldi	r24, 0x00	; 0
     464:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     468:	80 e0       	ldi	r24, 0x00	; 0
     46a:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     46e:	08 95       	ret

00000470 <can_transmit>:
     470:	ef 92       	push	r14
     472:	ff 92       	push	r15
     474:	0f 93       	push	r16
     476:	1f 93       	push	r17
     478:	cf 93       	push	r28
     47a:	df 93       	push	r29
     47c:	c8 2f       	mov	r28, r24
     47e:	d6 2f       	mov	r29, r22
     480:	04 2f       	mov	r16, r20
     482:	e2 2e       	mov	r14, r18
     484:	13 2f       	mov	r17, r19
     486:	81 e0       	ldi	r24, 0x01	; 1
     488:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     48c:	83 e0       	ldi	r24, 0x03	; 3
     48e:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     492:	8c 2f       	mov	r24, r28
     494:	82 95       	swap	r24
     496:	80 7f       	andi	r24, 0xF0	; 240
     498:	0f 2e       	mov	r0, r31
     49a:	f0 e3       	ldi	r31, 0x30	; 48
     49c:	ff 2e       	mov	r15, r31
     49e:	f0 2d       	mov	r31, r0
     4a0:	f8 0e       	add	r15, r24
     4a2:	8f 2d       	mov	r24, r15
     4a4:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     4a8:	80 e0       	ldi	r24, 0x00	; 0
     4aa:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     4ae:	80 e0       	ldi	r24, 0x00	; 0
     4b0:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     4b4:	81 e0       	ldi	r24, 0x01	; 1
     4b6:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     4ba:	82 e0       	ldi	r24, 0x02	; 2
     4bc:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     4c0:	8f 2d       	mov	r24, r15
     4c2:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     4c6:	83 e0       	ldi	r24, 0x03	; 3
     4c8:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     4cc:	80 e0       	ldi	r24, 0x00	; 0
     4ce:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     4d2:	81 e0       	ldi	r24, 0x01	; 1
     4d4:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     4d8:	82 e0       	ldi	r24, 0x02	; 2
     4da:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     4de:	c2 95       	swap	r28
     4e0:	c0 7f       	andi	r28, 0xF0	; 240
     4e2:	81 e3       	ldi	r24, 0x31	; 49
     4e4:	8c 0f       	add	r24, r28
     4e6:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     4ea:	8d 2f       	mov	r24, r29
     4ec:	86 95       	lsr	r24
     4ee:	86 95       	lsr	r24
     4f0:	86 95       	lsr	r24
     4f2:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     4f6:	80 e0       	ldi	r24, 0x00	; 0
     4f8:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     4fc:	81 e0       	ldi	r24, 0x01	; 1
     4fe:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     502:	82 e0       	ldi	r24, 0x02	; 2
     504:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     508:	82 e3       	ldi	r24, 0x32	; 50
     50a:	8c 0f       	add	r24, r28
     50c:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     510:	8d 2f       	mov	r24, r29
     512:	82 95       	swap	r24
     514:	88 0f       	add	r24, r24
     516:	80 7e       	andi	r24, 0xE0	; 224
     518:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     51c:	80 e0       	ldi	r24, 0x00	; 0
     51e:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     522:	81 e0       	ldi	r24, 0x01	; 1
     524:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     528:	82 e0       	ldi	r24, 0x02	; 2
     52a:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     52e:	85 e3       	ldi	r24, 0x35	; 53
     530:	8c 0f       	add	r24, r28
     532:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     536:	80 2f       	mov	r24, r16
     538:	8f 70       	andi	r24, 0x0F	; 15
     53a:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     53e:	80 e0       	ldi	r24, 0x00	; 0
     540:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     544:	81 e0       	ldi	r24, 0x01	; 1
     546:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     54a:	82 e0       	ldi	r24, 0x02	; 2
     54c:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     550:	86 e3       	ldi	r24, 0x36	; 54
     552:	8c 0f       	add	r24, r28
     554:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     558:	00 23       	and	r16, r16
     55a:	49 f0       	breq	.+18     	; 0x56e <__stack+0x6f>
     55c:	ce 2d       	mov	r28, r14
     55e:	d1 2f       	mov	r29, r17
     560:	10 e0       	ldi	r17, 0x00	; 0
     562:	89 91       	ld	r24, Y+
     564:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     568:	1f 5f       	subi	r17, 0xFF	; 255
     56a:	10 13       	cpse	r17, r16
     56c:	fa cf       	rjmp	.-12     	; 0x562 <__stack+0x63>
     56e:	80 e0       	ldi	r24, 0x00	; 0
     570:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     574:	81 e0       	ldi	r24, 0x01	; 1
     576:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     57a:	82 e0       	ldi	r24, 0x02	; 2
     57c:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     580:	8f 2d       	mov	r24, r15
     582:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     586:	88 e0       	ldi	r24, 0x08	; 8
     588:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     58c:	80 e0       	ldi	r24, 0x00	; 0
     58e:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     592:	0e 94 25 02 	call	0x44a	; 0x44a <can_rx_if_clear>
     596:	df 91       	pop	r29
     598:	cf 91       	pop	r28
     59a:	1f 91       	pop	r17
     59c:	0f 91       	pop	r16
     59e:	ff 90       	pop	r15
     5a0:	ef 90       	pop	r14
     5a2:	08 95       	ret

000005a4 <can_write_reg>:
     5a4:	cf 93       	push	r28
     5a6:	c6 2f       	mov	r28, r22
     5a8:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     5ac:	8c 2f       	mov	r24, r28
     5ae:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     5b2:	cf 91       	pop	r28
     5b4:	08 95       	ret

000005b6 <can_receive>:
     5b6:	8f 92       	push	r8
     5b8:	9f 92       	push	r9
     5ba:	af 92       	push	r10
     5bc:	bf 92       	push	r11
     5be:	cf 92       	push	r12
     5c0:	df 92       	push	r13
     5c2:	ef 92       	push	r14
     5c4:	ff 92       	push	r15
     5c6:	0f 93       	push	r16
     5c8:	1f 93       	push	r17
     5ca:	cf 93       	push	r28
     5cc:	df 93       	push	r29
     5ce:	cd b7       	in	r28, 0x3d	; 61
     5d0:	de b7       	in	r29, 0x3e	; 62
     5d2:	2e 97       	sbiw	r28, 0x0e	; 14
     5d4:	0f b6       	in	r0, 0x3f	; 63
     5d6:	f8 94       	cli
     5d8:	de bf       	out	0x3e, r29	; 62
     5da:	0f be       	out	0x3f, r0	; 63
     5dc:	cd bf       	out	0x3d, r28	; 61
     5de:	6c 01       	movw	r12, r24
     5e0:	5b 01       	movw	r10, r22
     5e2:	84 2e       	mov	r8, r20
     5e4:	95 2e       	mov	r9, r21
     5e6:	8e 01       	movw	r16, r28
     5e8:	0f 5f       	subi	r16, 0xFF	; 255
     5ea:	1f 4f       	sbci	r17, 0xFF	; 255
     5ec:	8e e0       	ldi	r24, 0x0E	; 14
     5ee:	f8 01       	movw	r30, r16
     5f0:	11 92       	st	Z+, r1
     5f2:	8a 95       	dec	r24
     5f4:	e9 f7       	brne	.-6      	; 0x5f0 <can_receive+0x3a>
     5f6:	81 e0       	ldi	r24, 0x01	; 1
     5f8:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     5fc:	80 eb       	ldi	r24, 0xB0	; 176
     5fe:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     602:	80 e0       	ldi	r24, 0x00	; 0
     604:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     608:	80 e0       	ldi	r24, 0x00	; 0
     60a:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     60e:	f8 2e       	mov	r15, r24
     610:	80 e0       	ldi	r24, 0x00	; 0
     612:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     616:	81 e0       	ldi	r24, 0x01	; 1
     618:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     61c:	83 e0       	ldi	r24, 0x03	; 3
     61e:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     622:	8f 2d       	mov	r24, r15
     624:	82 95       	swap	r24
     626:	86 95       	lsr	r24
     628:	86 95       	lsr	r24
     62a:	83 70       	andi	r24, 0x03	; 3
     62c:	81 5a       	subi	r24, 0xA1	; 161
     62e:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     632:	7e 01       	movw	r14, r28
     634:	ff e0       	ldi	r31, 0x0F	; 15
     636:	ef 0e       	add	r14, r31
     638:	f1 1c       	adc	r15, r1
     63a:	80 e0       	ldi	r24, 0x00	; 0
     63c:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     640:	f8 01       	movw	r30, r16
     642:	81 93       	st	Z+, r24
     644:	8f 01       	movw	r16, r30
     646:	ee 15       	cp	r30, r14
     648:	ff 05       	cpc	r31, r15
     64a:	b9 f7       	brne	.-18     	; 0x63a <can_receive+0x84>
     64c:	8a 81       	ldd	r24, Y+2	; 0x02
     64e:	88 0f       	add	r24, r24
     650:	88 0f       	add	r24, r24
     652:	88 0f       	add	r24, r24
     654:	f6 01       	movw	r30, r12
     656:	80 83       	st	Z, r24
     658:	8b 81       	ldd	r24, Y+3	; 0x03
     65a:	82 95       	swap	r24
     65c:	86 95       	lsr	r24
     65e:	87 70       	andi	r24, 0x07	; 7
     660:	81 83       	std	Z+1, r24	; 0x01
     662:	8e 81       	ldd	r24, Y+6	; 0x06
     664:	f5 01       	movw	r30, r10
     666:	80 83       	st	Z, r24
     668:	fe 01       	movw	r30, r28
     66a:	37 96       	adiw	r30, 0x07	; 7
     66c:	a8 2d       	mov	r26, r8
     66e:	b9 2d       	mov	r27, r9
     670:	81 91       	ld	r24, Z+
     672:	8d 93       	st	X+, r24
     674:	ee 16       	cp	r14, r30
     676:	ff 06       	cpc	r15, r31
     678:	d9 f7       	brne	.-10     	; 0x670 <can_receive+0xba>
     67a:	0e 94 25 02 	call	0x44a	; 0x44a <can_rx_if_clear>
     67e:	2e 96       	adiw	r28, 0x0e	; 14
     680:	0f b6       	in	r0, 0x3f	; 63
     682:	f8 94       	cli
     684:	de bf       	out	0x3e, r29	; 62
     686:	0f be       	out	0x3f, r0	; 63
     688:	cd bf       	out	0x3d, r28	; 61
     68a:	df 91       	pop	r29
     68c:	cf 91       	pop	r28
     68e:	1f 91       	pop	r17
     690:	0f 91       	pop	r16
     692:	ff 90       	pop	r15
     694:	ef 90       	pop	r14
     696:	df 90       	pop	r13
     698:	cf 90       	pop	r12
     69a:	bf 90       	pop	r11
     69c:	af 90       	pop	r10
     69e:	9f 90       	pop	r9
     6a0:	8f 90       	pop	r8
     6a2:	08 95       	ret

000006a4 <can_read_status>:
     6a4:	81 e0       	ldi	r24, 0x01	; 1
     6a6:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     6aa:	83 e0       	ldi	r24, 0x03	; 3
     6ac:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     6b0:	8e ef       	ldi	r24, 0xFE	; 254
     6b2:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     6b6:	80 e0       	ldi	r24, 0x00	; 0
     6b8:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     6bc:	08 95       	ret

000006be <can_config>:
     6be:	cf 93       	push	r28
     6c0:	c8 2f       	mov	r28, r24
     6c2:	0e 94 1b 02 	call	0x436	; 0x436 <can_reset>
     6c6:	81 e0       	ldi	r24, 0x01	; 1
     6c8:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     6cc:	82 e0       	ldi	r24, 0x02	; 2
     6ce:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     6d2:	60 e8       	ldi	r22, 0x80	; 128
     6d4:	8f ef       	ldi	r24, 0xFF	; 255
     6d6:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <can_write_reg>
     6da:	80 e0       	ldi	r24, 0x00	; 0
     6dc:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     6e0:	0e 94 52 03 	call	0x6a4	; 0x6a4 <can_read_status>
     6e4:	82 95       	swap	r24
     6e6:	86 95       	lsr	r24
     6e8:	87 70       	andi	r24, 0x07	; 7
     6ea:	84 30       	cpi	r24, 0x04	; 4
     6ec:	49 f0       	breq	.+18     	; 0x700 <can_config+0x42>
     6ee:	2c e1       	ldi	r18, 0x1C	; 28
     6f0:	31 e0       	ldi	r19, 0x01	; 1
     6f2:	3f 93       	push	r19
     6f4:	2f 93       	push	r18
     6f6:	0e 94 e5 06 	call	0xdca	; 0xdca <printf>
     6fa:	0f 90       	pop	r0
     6fc:	0f 90       	pop	r0
     6fe:	08 c0       	rjmp	.+16     	; 0x710 <can_config+0x52>
     700:	22 e4       	ldi	r18, 0x42	; 66
     702:	31 e0       	ldi	r19, 0x01	; 1
     704:	3f 93       	push	r19
     706:	2f 93       	push	r18
     708:	0e 94 e5 06 	call	0xdca	; 0xdca <printf>
     70c:	0f 90       	pop	r0
     70e:	0f 90       	pop	r0
     710:	88 e1       	ldi	r24, 0x18	; 24
     712:	94 e0       	ldi	r25, 0x04	; 4
     714:	01 97       	sbiw	r24, 0x01	; 1
     716:	f1 f7       	brne	.-4      	; 0x714 <can_config+0x56>
     718:	00 c0       	rjmp	.+0      	; 0x71a <can_config+0x5c>
     71a:	00 00       	nop
     71c:	81 e0       	ldi	r24, 0x01	; 1
     71e:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     722:	82 e0       	ldi	r24, 0x02	; 2
     724:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     728:	60 e0       	ldi	r22, 0x00	; 0
     72a:	80 e2       	ldi	r24, 0x20	; 32
     72c:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <can_write_reg>
     730:	80 e0       	ldi	r24, 0x00	; 0
     732:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     736:	88 e1       	ldi	r24, 0x18	; 24
     738:	94 e0       	ldi	r25, 0x04	; 4
     73a:	01 97       	sbiw	r24, 0x01	; 1
     73c:	f1 f7       	brne	.-4      	; 0x73a <can_config+0x7c>
     73e:	00 c0       	rjmp	.+0      	; 0x740 <can_config+0x82>
     740:	00 00       	nop
     742:	81 e0       	ldi	r24, 0x01	; 1
     744:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     748:	82 e0       	ldi	r24, 0x02	; 2
     74a:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     74e:	60 e0       	ldi	r22, 0x00	; 0
     750:	84 e2       	ldi	r24, 0x24	; 36
     752:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <can_write_reg>
     756:	80 e0       	ldi	r24, 0x00	; 0
     758:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     75c:	88 e1       	ldi	r24, 0x18	; 24
     75e:	94 e0       	ldi	r25, 0x04	; 4
     760:	01 97       	sbiw	r24, 0x01	; 1
     762:	f1 f7       	brne	.-4      	; 0x760 <can_config+0xa2>
     764:	00 c0       	rjmp	.+0      	; 0x766 <can_config+0xa8>
     766:	00 00       	nop
     768:	81 e0       	ldi	r24, 0x01	; 1
     76a:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     76e:	82 e0       	ldi	r24, 0x02	; 2
     770:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     774:	60 e0       	ldi	r22, 0x00	; 0
     776:	81 e2       	ldi	r24, 0x21	; 33
     778:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <can_write_reg>
     77c:	80 e0       	ldi	r24, 0x00	; 0
     77e:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     782:	88 e1       	ldi	r24, 0x18	; 24
     784:	94 e0       	ldi	r25, 0x04	; 4
     786:	01 97       	sbiw	r24, 0x01	; 1
     788:	f1 f7       	brne	.-4      	; 0x786 <can_config+0xc8>
     78a:	00 c0       	rjmp	.+0      	; 0x78c <can_config+0xce>
     78c:	00 00       	nop
     78e:	81 e0       	ldi	r24, 0x01	; 1
     790:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     794:	82 e0       	ldi	r24, 0x02	; 2
     796:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     79a:	60 e0       	ldi	r22, 0x00	; 0
     79c:	85 e2       	ldi	r24, 0x25	; 37
     79e:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <can_write_reg>
     7a2:	80 e0       	ldi	r24, 0x00	; 0
     7a4:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     7a8:	88 e1       	ldi	r24, 0x18	; 24
     7aa:	94 e0       	ldi	r25, 0x04	; 4
     7ac:	01 97       	sbiw	r24, 0x01	; 1
     7ae:	f1 f7       	brne	.-4      	; 0x7ac <can_config+0xee>
     7b0:	00 c0       	rjmp	.+0      	; 0x7b2 <can_config+0xf4>
     7b2:	00 00       	nop
     7b4:	81 e0       	ldi	r24, 0x01	; 1
     7b6:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     7ba:	82 e0       	ldi	r24, 0x02	; 2
     7bc:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     7c0:	63 e0       	ldi	r22, 0x03	; 3
     7c2:	8b e2       	ldi	r24, 0x2B	; 43
     7c4:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <can_write_reg>
     7c8:	80 e0       	ldi	r24, 0x00	; 0
     7ca:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     7ce:	88 e1       	ldi	r24, 0x18	; 24
     7d0:	94 e0       	ldi	r25, 0x04	; 4
     7d2:	01 97       	sbiw	r24, 0x01	; 1
     7d4:	f1 f7       	brne	.-4      	; 0x7d2 <can_config+0x114>
     7d6:	00 c0       	rjmp	.+0      	; 0x7d8 <can_config+0x11a>
     7d8:	00 00       	nop
     7da:	81 e0       	ldi	r24, 0x01	; 1
     7dc:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     7e0:	82 e0       	ldi	r24, 0x02	; 2
     7e2:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     7e6:	63 e0       	ldi	r22, 0x03	; 3
     7e8:	8a e2       	ldi	r24, 0x2A	; 42
     7ea:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <can_write_reg>
     7ee:	80 e0       	ldi	r24, 0x00	; 0
     7f0:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     7f4:	88 e1       	ldi	r24, 0x18	; 24
     7f6:	94 e0       	ldi	r25, 0x04	; 4
     7f8:	01 97       	sbiw	r24, 0x01	; 1
     7fa:	f1 f7       	brne	.-4      	; 0x7f8 <can_config+0x13a>
     7fc:	00 c0       	rjmp	.+0      	; 0x7fe <can_config+0x140>
     7fe:	00 00       	nop
     800:	81 e0       	ldi	r24, 0x01	; 1
     802:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     806:	82 e0       	ldi	r24, 0x02	; 2
     808:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     80c:	61 ed       	ldi	r22, 0xD1	; 209
     80e:	89 e2       	ldi	r24, 0x29	; 41
     810:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <can_write_reg>
     814:	80 e0       	ldi	r24, 0x00	; 0
     816:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     81a:	88 e1       	ldi	r24, 0x18	; 24
     81c:	94 e0       	ldi	r25, 0x04	; 4
     81e:	01 97       	sbiw	r24, 0x01	; 1
     820:	f1 f7       	brne	.-4      	; 0x81e <can_config+0x160>
     822:	00 c0       	rjmp	.+0      	; 0x824 <can_config+0x166>
     824:	00 00       	nop
     826:	81 e0       	ldi	r24, 0x01	; 1
     828:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     82c:	82 e0       	ldi	r24, 0x02	; 2
     82e:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     832:	61 e4       	ldi	r22, 0x41	; 65
     834:	88 e2       	ldi	r24, 0x28	; 40
     836:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <can_write_reg>
     83a:	80 e0       	ldi	r24, 0x00	; 0
     83c:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     840:	88 e1       	ldi	r24, 0x18	; 24
     842:	94 e0       	ldi	r25, 0x04	; 4
     844:	01 97       	sbiw	r24, 0x01	; 1
     846:	f1 f7       	brne	.-4      	; 0x844 <can_config+0x186>
     848:	00 c0       	rjmp	.+0      	; 0x84a <can_config+0x18c>
     84a:	00 00       	nop
     84c:	81 e0       	ldi	r24, 0x01	; 1
     84e:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     852:	82 e0       	ldi	r24, 0x02	; 2
     854:	0e 94 16 02 	call	0x42c	; 0x42c <spi_tx_rx>
     858:	6c 2f       	mov	r22, r28
     85a:	62 95       	swap	r22
     85c:	66 0f       	add	r22, r22
     85e:	60 7e       	andi	r22, 0xE0	; 224
     860:	8f ef       	ldi	r24, 0xFF	; 255
     862:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <can_write_reg>
     866:	80 e0       	ldi	r24, 0x00	; 0
     868:	0e 94 10 02 	call	0x420	; 0x420 <spi_chipselect>
     86c:	cf 91       	pop	r28
     86e:	08 95       	ret

00000870 <plunger>:
/************************************************************************/
/*			PLUNGER FUCNTION TO ACTIVATE SOLENOID                      */
/************************************************************************/
void plunger(void)
{
	cli();
     870:	f8 94       	cli
	PORTB &= ~(1<<PB0);			// clear PORTB_0 pin 1 when switch is pressed, will be used for plunger
     872:	c0 98       	cbi	0x18, 0	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     874:	80 e0       	ldi	r24, 0x00	; 0
     876:	90 ef       	ldi	r25, 0xF0	; 240
     878:	01 97       	sbiw	r24, 0x01	; 1
     87a:	f1 f7       	brne	.-4      	; 0x878 <plunger+0x8>
						
	_delay_ms(50);             //can be changed!!!
	PORTB |= (1<<PB0);			// Set PORTB_0
     87c:	c0 9a       	sbi	0x18, 0	; 24
	sei();
     87e:	78 94       	sei
     880:	08 95       	ret

00000882 <main>:
int flag_plunger=0;



int main(void)
{	/* Set up the default menu text write callback, and navigate to an absolute menu item entry. */
     882:	cf 93       	push	r28
     884:	df 93       	push	r29
     886:	cd b7       	in	r28, 0x3d	; 61
     888:	de b7       	in	r29, 0x3e	; 62
     88a:	a0 97       	sbiw	r28, 0x20	; 32
     88c:	0f b6       	in	r0, 0x3f	; 63
     88e:	f8 94       	cli
     890:	de bf       	out	0x3e, r29	; 62
     892:	0f be       	out	0x3f, r0	; 63
     894:	cd bf       	out	0x3d, r28	; 61
		stdout = &oled_stdout;
     896:	8e e0       	ldi	r24, 0x0E	; 14
     898:	91 e0       	ldi	r25, 0x01	; 1
     89a:	90 93 e7 01 	sts	0x01E7, r25
     89e:	80 93 e6 01 	sts	0x01E6, r24
		usart_init(MYUBRR);
     8a2:	8f e1       	ldi	r24, 0x1F	; 31
     8a4:	90 e0       	ldi	r25, 0x00	; 0
     8a6:	0e 94 61 06 	call	0xcc2	; 0xcc2 <usart_init>

		fprintf(&usart_stdout,"Usart says hello!\n");
     8aa:	20 e0       	ldi	r18, 0x00	; 0
     8ac:	31 e0       	ldi	r19, 0x01	; 1
     8ae:	42 e1       	ldi	r20, 0x12	; 18
     8b0:	50 e0       	ldi	r21, 0x00	; 0
     8b2:	61 e0       	ldi	r22, 0x01	; 1
     8b4:	70 e0       	ldi	r23, 0x00	; 0
     8b6:	8c e5       	ldi	r24, 0x5C	; 92
     8b8:	91 e0       	ldi	r25, 0x01	; 1
     8ba:	0e 94 b1 06 	call	0xd62	; 0xd62 <fwrite>
		oled_init();
     8be:	0e 94 5a 05 	call	0xab4	; 0xab4 <oled_init>
		oled_clear();
     8c2:	0e 94 e0 05 	call	0xbc0	; 0xbc0 <oled_clear>
		oled_putstr_inverse("hello world!!\n");
     8c6:	8f e6       	ldi	r24, 0x6F	; 111
     8c8:	91 e0       	ldi	r25, 0x01	; 1
     8ca:	0e 94 52 06 	call	0xca4	; 0xca4 <oled_putstr_inverse>
		adc_init();
     8ce:	0e 94 88 01 	call	0x310	; 0x310 <adc_init>
	
	
		//INTERRUPT CONFIGURATION and Plunger Configuration (INT2 is for CAN and INT 0 is for solenoid)

		DDRB= (1<<PB0);							//Make PB0 as output for plunger
     8d2:	81 e0       	ldi	r24, 0x01	; 1
     8d4:	87 bb       	out	0x17, r24	; 23
		
		sei();									//Enable Global Interrupts
     8d6:	78 94       	sei
		GICR |= (1<<INT0) | (1<<INT2);			//Enable INT_2, falling edge (ISC2 is zero)
     8d8:	8b b7       	in	r24, 0x3b	; 59
     8da:	80 66       	ori	r24, 0x60	; 96
     8dc:	8b bf       	out	0x3b, r24	; 59
		MCUCR |= (1<<ISC01);					//Falling edge interrupt for Plunger
     8de:	85 b7       	in	r24, 0x35	; 53
     8e0:	82 60       	ori	r24, 0x02	; 2
     8e2:	85 bf       	out	0x35, r24	; 53
	//	uart_config();
	//	fdevopen(&uart_transmit, (void *) 0);		//UART write function
	//
		//SPI and CAN functions

		spi_config();
     8e4:	0e 94 08 02 	call	0x410	; 0x410 <spi_config>

		can_reset();
     8e8:	0e 94 1b 02 	call	0x436	; 0x436 <can_reset>

		can_config(NORMAL);		//configure in loop back mode
     8ec:	80 e0       	ldi	r24, 0x00	; 0
     8ee:	90 e0       	ldi	r25, 0x00	; 0
     8f0:	0e 94 5f 03 	call	0x6be	; 0x6be <can_config>
			//int x = (0x80 & pos.x )? (pos.x + 0xff00):pos.x;
			//int y = (0x80 & pos.y )? (pos.y + 0xff00):pos.y;
			can_transmit(0,0x05,8,tx_data);			//BUFFER 0, ID 0x05, 8 data bytes and data=stored string
			_delay_ms(125);
			oled_goto_xy(5,1);
			printf("data Tran: %d, x: %5d, y: %5d, %d, %d, %d, %d, %d"\
     8f4:	0f 2e       	mov	r0, r31
     8f6:	fe e7       	ldi	r31, 0x7E	; 126
     8f8:	ef 2e       	mov	r14, r31
     8fa:	f1 e0       	ldi	r31, 0x01	; 1
     8fc:	ff 2e       	mov	r15, r31
     8fe:	f0 2d       	mov	r31, r0
     900:	8e 01       	movw	r16, r28
     902:	08 5f       	subi	r16, 0xF8	; 248
     904:	1f 4f       	sbci	r17, 0xFF	; 255
					print_temp[i] = (0x80 & rx_data[i] )? (rx_data[i] + 0xff00):rx_data[i];
				}
				int16_t encoder_val = (uint8_t)rx_data[5]*0x100 + (uint8_t)rx_data[6];
				int16_t set_val =  (uint8_t)rx_data[3]*0x100 + (uint8_t)rx_data[4];
				//int a = (0x80 & rx_data[2] )? (rx_data[2] + 0xff00):rx_data[2];
				printf("Receive Data: %5i, %5i, set: %5d, en: %5d\n",print_temp[0],print_temp[1],set_val,encoder_val);		//display pattern (constant), x data plus 5 and y data +10
     906:	0f 2e       	mov	r0, r31
     908:	f0 eb       	ldi	r31, 0xB0	; 176
     90a:	cf 2e       	mov	r12, r31
     90c:	f1 e0       	ldi	r31, 0x01	; 1
     90e:	df 2e       	mov	r13, r31
     910:	f0 2d       	mov	r31, r0
			adc_pos_t pos = adc_get_position();
			_delay_ms(125);
			/************************************************************************/
			/*       arrange  the frame to send to can                              */
			/************************************************************************/
			tx_data[0] = 0b10101010;
     912:	0f 2e       	mov	r0, r31
     914:	fa ea       	ldi	r31, 0xAA	; 170
     916:	bf 2e       	mov	r11, r31
     918:	f0 2d       	mov	r31, r0
		button_val = BUTTON_NONE;
		_delay_ms(125);
		*/
		while (1)
		{
			adc_pos_t pos = adc_get_position();
     91a:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <adc_get_position>
     91e:	a6 2e       	mov	r10, r22
     920:	87 2e       	mov	r8, r23
     922:	98 2e       	mov	r9, r24
     924:	79 2e       	mov	r7, r25
     926:	2f ef       	ldi	r18, 0xFF	; 255
     928:	8f ed       	ldi	r24, 0xDF	; 223
     92a:	91 e0       	ldi	r25, 0x01	; 1
     92c:	21 50       	subi	r18, 0x01	; 1
     92e:	80 40       	sbci	r24, 0x00	; 0
     930:	90 40       	sbci	r25, 0x00	; 0
     932:	e1 f7       	brne	.-8      	; 0x92c <main+0xaa>
     934:	00 c0       	rjmp	.+0      	; 0x936 <main+0xb4>
     936:	00 00       	nop
			_delay_ms(125);
			/************************************************************************/
			/*       arrange  the frame to send to can                              */
			/************************************************************************/
			tx_data[0] = 0b10101010;
     938:	b9 86       	std	Y+9, r11	; 0x09
			tx_data[1] = pos.x;
     93a:	aa 86       	std	Y+10, r10	; 0x0a
			tx_data[2] = pos.y;
     93c:	9b 86       	std	Y+11, r9	; 0x0b
			//int x = (0x80 & pos.x )? (pos.x + 0xff00):pos.x;
			//int y = (0x80 & pos.y )? (pos.y + 0xff00):pos.y;
			can_transmit(0,0x05,8,tx_data);			//BUFFER 0, ID 0x05, 8 data bytes and data=stored string
     93e:	9e 01       	movw	r18, r28
     940:	27 5f       	subi	r18, 0xF7	; 247
     942:	3f 4f       	sbci	r19, 0xFF	; 255
     944:	48 e0       	ldi	r20, 0x08	; 8
     946:	65 e0       	ldi	r22, 0x05	; 5
     948:	80 e0       	ldi	r24, 0x00	; 0
     94a:	0e 94 38 02 	call	0x470	; 0x470 <can_transmit>
     94e:	2f ef       	ldi	r18, 0xFF	; 255
     950:	8f ed       	ldi	r24, 0xDF	; 223
     952:	91 e0       	ldi	r25, 0x01	; 1
     954:	21 50       	subi	r18, 0x01	; 1
     956:	80 40       	sbci	r24, 0x00	; 0
     958:	90 40       	sbci	r25, 0x00	; 0
     95a:	e1 f7       	brne	.-8      	; 0x954 <main+0xd2>
     95c:	00 c0       	rjmp	.+0      	; 0x95e <main+0xdc>
     95e:	00 00       	nop
			_delay_ms(125);
			oled_goto_xy(5,1);
     960:	61 e0       	ldi	r22, 0x01	; 1
     962:	85 e0       	ldi	r24, 0x05	; 5
     964:	0e 94 8d 05 	call	0xb1a	; 0xb1a <oled_goto_xy>
			printf("data Tran: %d, x: %5d, y: %5d, %d, %d, %d, %d, %d"\
     968:	88 89       	ldd	r24, Y+16	; 0x10
     96a:	1f 92       	push	r1
     96c:	8f 93       	push	r24
     96e:	8f 85       	ldd	r24, Y+15	; 0x0f
     970:	1f 92       	push	r1
     972:	8f 93       	push	r24
     974:	8e 85       	ldd	r24, Y+14	; 0x0e
     976:	1f 92       	push	r1
     978:	8f 93       	push	r24
     97a:	8d 85       	ldd	r24, Y+13	; 0x0d
     97c:	1f 92       	push	r1
     97e:	8f 93       	push	r24
     980:	8c 85       	ldd	r24, Y+12	; 0x0c
     982:	1f 92       	push	r1
     984:	8f 93       	push	r24
     986:	7f 92       	push	r7
     988:	9f 92       	push	r9
     98a:	8f 92       	push	r8
     98c:	af 92       	push	r10
     98e:	89 85       	ldd	r24, Y+9	; 0x09
     990:	1f 92       	push	r1
     992:	8f 93       	push	r24
     994:	ff 92       	push	r15
     996:	ef 92       	push	r14
     998:	0e 94 e5 06 	call	0xdca	; 0xdca <printf>
					, tx_data[0],pos.x,pos.y,tx_data[3],tx_data[4],tx_data[5],tx_data[6],tx_data[7]);		//0 is pattern, 1 is x and 2 is y

			 //CAN RECEIVE FLAG PART

			if(rx_flag)
     99c:	0f b6       	in	r0, 0x3f	; 63
     99e:	f8 94       	cli
     9a0:	de bf       	out	0x3e, r29	; 62
     9a2:	0f be       	out	0x3f, r0	; 63
     9a4:	cd bf       	out	0x3d, r28	; 61
     9a6:	80 91 e0 01 	lds	r24, 0x01E0
     9aa:	90 91 e1 01 	lds	r25, 0x01E1
     9ae:	89 2b       	or	r24, r25
     9b0:	09 f4       	brne	.+2      	; 0x9b4 <main+0x132>
     9b2:	44 c0       	rjmp	.+136    	; 0xa3c <main+0x1ba>
					encoder upper byte from node 2
					encoder lower byte from node 2
				                                                                     */
				/************************************************************************/

				rx_flag=0;
     9b4:	10 92 e1 01 	sts	0x01E1, r1
     9b8:	10 92 e0 01 	sts	0x01E0, r1
				oled_goto_xy(5,4);
     9bc:	64 e0       	ldi	r22, 0x04	; 4
     9be:	85 e0       	ldi	r24, 0x05	; 5
     9c0:	0e 94 8d 05 	call	0xb1a	; 0xb1a <oled_goto_xy>
				can_receive(rx_id,rx_length,rx_data);
     9c4:	ae 01       	movw	r20, r28
     9c6:	4f 5f       	subi	r20, 0xFF	; 255
     9c8:	5f 4f       	sbci	r21, 0xFF	; 255
     9ca:	60 e0       	ldi	r22, 0x00	; 0
     9cc:	70 e0       	ldi	r23, 0x00	; 0
     9ce:	ce 01       	movw	r24, r28
     9d0:	41 96       	adiw	r24, 0x11	; 17
     9d2:	0e 94 db 02 	call	0x5b6	; 0x5b6 <can_receive>
     9d6:	fe 01       	movw	r30, r28
     9d8:	31 96       	adiw	r30, 0x01	; 1
     9da:	de 01       	movw	r26, r28
     9dc:	53 96       	adiw	r26, 0x13	; 19
				int print_temp[7];
				int i;
				for (i = 0; i< 7; i++)
				{
					print_temp[i] = (0x80 & rx_data[i] )? (rx_data[i] + 0xff00):rx_data[i];
     9de:	81 91       	ld	r24, Z+
     9e0:	88 23       	and	r24, r24
     9e2:	1c f4       	brge	.+6      	; 0x9ea <main+0x168>
     9e4:	90 e0       	ldi	r25, 0x00	; 0
     9e6:	9a 95       	dec	r25
     9e8:	01 c0       	rjmp	.+2      	; 0x9ec <main+0x16a>
     9ea:	90 e0       	ldi	r25, 0x00	; 0
     9ec:	8d 93       	st	X+, r24
     9ee:	9d 93       	st	X+, r25
				rx_flag=0;
				oled_goto_xy(5,4);
				can_receive(rx_id,rx_length,rx_data);
				int print_temp[7];
				int i;
				for (i = 0; i< 7; i++)
     9f0:	e0 17       	cp	r30, r16
     9f2:	f1 07       	cpc	r31, r17
     9f4:	a1 f7       	brne	.-24     	; 0x9de <main+0x15c>
				{
					print_temp[i] = (0x80 & rx_data[i] )? (rx_data[i] + 0xff00):rx_data[i];
				}
				int16_t encoder_val = (uint8_t)rx_data[5]*0x100 + (uint8_t)rx_data[6];
     9f6:	8e 81       	ldd	r24, Y+6	; 0x06
     9f8:	90 e0       	ldi	r25, 0x00	; 0
     9fa:	98 2f       	mov	r25, r24
     9fc:	88 27       	eor	r24, r24
     9fe:	2f 81       	ldd	r18, Y+7	; 0x07
     a00:	82 0f       	add	r24, r18
     a02:	91 1d       	adc	r25, r1
				int16_t set_val =  (uint8_t)rx_data[3]*0x100 + (uint8_t)rx_data[4];
				//int a = (0x80 & rx_data[2] )? (rx_data[2] + 0xff00):rx_data[2];
				printf("Receive Data: %5i, %5i, set: %5d, en: %5d\n",print_temp[0],print_temp[1],set_val,encoder_val);		//display pattern (constant), x data plus 5 and y data +10
     a04:	9f 93       	push	r25
     a06:	8f 93       	push	r24
				for (i = 0; i< 7; i++)
				{
					print_temp[i] = (0x80 & rx_data[i] )? (rx_data[i] + 0xff00):rx_data[i];
				}
				int16_t encoder_val = (uint8_t)rx_data[5]*0x100 + (uint8_t)rx_data[6];
				int16_t set_val =  (uint8_t)rx_data[3]*0x100 + (uint8_t)rx_data[4];
     a08:	8c 81       	ldd	r24, Y+4	; 0x04
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	98 2f       	mov	r25, r24
     a0e:	88 27       	eor	r24, r24
     a10:	2d 81       	ldd	r18, Y+5	; 0x05
     a12:	82 0f       	add	r24, r18
     a14:	91 1d       	adc	r25, r1
				//int a = (0x80 & rx_data[2] )? (rx_data[2] + 0xff00):rx_data[2];
				printf("Receive Data: %5i, %5i, set: %5d, en: %5d\n",print_temp[0],print_temp[1],set_val,encoder_val);		//display pattern (constant), x data plus 5 and y data +10
     a16:	9f 93       	push	r25
     a18:	8f 93       	push	r24
     a1a:	8e 89       	ldd	r24, Y+22	; 0x16
     a1c:	8f 93       	push	r24
     a1e:	8d 89       	ldd	r24, Y+21	; 0x15
     a20:	8f 93       	push	r24
     a22:	8c 89       	ldd	r24, Y+20	; 0x14
     a24:	8f 93       	push	r24
     a26:	8b 89       	ldd	r24, Y+19	; 0x13
     a28:	8f 93       	push	r24
     a2a:	df 92       	push	r13
     a2c:	cf 92       	push	r12
     a2e:	0e 94 e5 06 	call	0xdca	; 0xdca <printf>
     a32:	0f b6       	in	r0, 0x3f	; 63
     a34:	f8 94       	cli
     a36:	de bf       	out	0x3e, r29	; 62
     a38:	0f be       	out	0x3f, r0	; 63
     a3a:	cd bf       	out	0x3d, r28	; 61

			}

			 //PLUNGER FLAG PART

			if(flag_plunger)
     a3c:	80 91 de 01 	lds	r24, 0x01DE
     a40:	90 91 df 01 	lds	r25, 0x01DF
     a44:	89 2b       	or	r24, r25
     a46:	09 f4       	brne	.+2      	; 0xa4a <main+0x1c8>
     a48:	68 cf       	rjmp	.-304    	; 0x91a <main+0x98>
            {
                flag_plunger=0;     //clear flag
     a4a:	10 92 df 01 	sts	0x01DF, r1
     a4e:	10 92 de 01 	sts	0x01DE, r1
             plunger();             //call plunger functions
     a52:	0e 94 38 04 	call	0x870	; 0x870 <plunger>
     a56:	5d cf       	rjmp	.-326    	; 0x912 <main+0x90>

00000a58 <__vector_3>:
                                                                               */
      /************************************************************************/


ISR(INT2_vect)
{
     a58:	1f 92       	push	r1
     a5a:	0f 92       	push	r0
     a5c:	0f b6       	in	r0, 0x3f	; 63
     a5e:	0f 92       	push	r0
     a60:	11 24       	eor	r1, r1
     a62:	8f 93       	push	r24
     a64:	9f 93       	push	r25
	rx_flag=1;					//set receive flag for main function, flag will be cleared in main.
     a66:	81 e0       	ldi	r24, 0x01	; 1
     a68:	90 e0       	ldi	r25, 0x00	; 0
     a6a:	90 93 e1 01 	sts	0x01E1, r25
     a6e:	80 93 e0 01 	sts	0x01E0, r24
	GIFR &= ~(1<<INTF2);		//clear interrupt flag
     a72:	8a b7       	in	r24, 0x3a	; 58
     a74:	8f 7d       	andi	r24, 0xDF	; 223
     a76:	8a bf       	out	0x3a, r24	; 58
}
     a78:	9f 91       	pop	r25
     a7a:	8f 91       	pop	r24
     a7c:	0f 90       	pop	r0
     a7e:	0f be       	out	0x3f, r0	; 63
     a80:	0f 90       	pop	r0
     a82:	1f 90       	pop	r1
     a84:	18 95       	reti

00000a86 <__vector_1>:


ISR(INT0_vect)
{
     a86:	1f 92       	push	r1
     a88:	0f 92       	push	r0
     a8a:	0f b6       	in	r0, 0x3f	; 63
     a8c:	0f 92       	push	r0
     a8e:	11 24       	eor	r1, r1
     a90:	8f 93       	push	r24
     a92:	9f 93       	push	r25
	flag_plunger=1;		//set flag
     a94:	81 e0       	ldi	r24, 0x01	; 1
     a96:	90 e0       	ldi	r25, 0x00	; 0
     a98:	90 93 df 01 	sts	0x01DF, r25
     a9c:	80 93 de 01 	sts	0x01DE, r24
	GIFR &= ~(1<<INTF0);	//clear flag of interrupt
     aa0:	8a b7       	in	r24, 0x3a	; 58
     aa2:	8f 7b       	andi	r24, 0xBF	; 191
     aa4:	8a bf       	out	0x3a, r24	; 58
}
     aa6:	9f 91       	pop	r25
     aa8:	8f 91       	pop	r24
     aaa:	0f 90       	pop	r0
     aac:	0f be       	out	0x3f, r0	; 63
     aae:	0f 90       	pop	r0
     ab0:	1f 90       	pop	r1
     ab2:	18 95       	reti

00000ab4 <oled_init>:
     ab4:	85 b7       	in	r24, 0x35	; 53
     ab6:	80 68       	ori	r24, 0x80	; 128
     ab8:	85 bf       	out	0x35, r24	; 53
     aba:	80 b7       	in	r24, 0x30	; 48
     abc:	80 62       	ori	r24, 0x20	; 32
     abe:	80 bf       	out	0x30, r24	; 48
     ac0:	ef e0       	ldi	r30, 0x0F	; 15
     ac2:	f0 e1       	ldi	r31, 0x10	; 16
     ac4:	8e ea       	ldi	r24, 0xAE	; 174
     ac6:	80 83       	st	Z, r24
     ac8:	81 ea       	ldi	r24, 0xA1	; 161
     aca:	80 83       	st	Z, r24
     acc:	8a ed       	ldi	r24, 0xDA	; 218
     ace:	80 83       	st	Z, r24
     ad0:	82 e1       	ldi	r24, 0x12	; 18
     ad2:	80 83       	st	Z, r24
     ad4:	88 ec       	ldi	r24, 0xC8	; 200
     ad6:	80 83       	st	Z, r24
     ad8:	88 ea       	ldi	r24, 0xA8	; 168
     ada:	80 83       	st	Z, r24
     adc:	8f e3       	ldi	r24, 0x3F	; 63
     ade:	80 83       	st	Z, r24
     ae0:	85 ed       	ldi	r24, 0xD5	; 213
     ae2:	80 83       	st	Z, r24
     ae4:	80 e8       	ldi	r24, 0x80	; 128
     ae6:	80 83       	st	Z, r24
     ae8:	81 e8       	ldi	r24, 0x81	; 129
     aea:	80 83       	st	Z, r24
     aec:	80 e5       	ldi	r24, 0x50	; 80
     aee:	80 83       	st	Z, r24
     af0:	89 ed       	ldi	r24, 0xD9	; 217
     af2:	80 83       	st	Z, r24
     af4:	81 e2       	ldi	r24, 0x21	; 33
     af6:	80 83       	st	Z, r24
     af8:	80 e2       	ldi	r24, 0x20	; 32
     afa:	80 83       	st	Z, r24
     afc:	10 82       	st	Z, r1
     afe:	8b ed       	ldi	r24, 0xDB	; 219
     b00:	80 83       	st	Z, r24
     b02:	80 e3       	ldi	r24, 0x30	; 48
     b04:	80 83       	st	Z, r24
     b06:	8d ea       	ldi	r24, 0xAD	; 173
     b08:	80 83       	st	Z, r24
     b0a:	10 82       	st	Z, r1
     b0c:	84 ea       	ldi	r24, 0xA4	; 164
     b0e:	80 83       	st	Z, r24
     b10:	86 ea       	ldi	r24, 0xA6	; 166
     b12:	80 83       	st	Z, r24
     b14:	8f ea       	ldi	r24, 0xAF	; 175
     b16:	80 83       	st	Z, r24
     b18:	08 95       	ret

00000b1a <oled_goto_xy>:
     b1a:	80 93 e3 01 	sts	0x01E3, r24
     b1e:	60 93 e2 01 	sts	0x01E2, r22
     b22:	ef e0       	ldi	r30, 0x0F	; 15
     b24:	f0 e1       	ldi	r31, 0x10	; 16
     b26:	91 e2       	ldi	r25, 0x21	; 33
     b28:	90 83       	st	Z, r25
     b2a:	80 83       	st	Z, r24
     b2c:	8f e7       	ldi	r24, 0x7F	; 127
     b2e:	80 83       	st	Z, r24
     b30:	82 e2       	ldi	r24, 0x22	; 34
     b32:	80 83       	st	Z, r24
     b34:	60 83       	st	Z, r22
     b36:	86 e0       	ldi	r24, 0x06	; 6
     b38:	80 83       	st	Z, r24
     b3a:	08 95       	ret

00000b3c <oled_goto_nextln>:
     b3c:	80 91 e2 01 	lds	r24, 0x01E2
     b40:	8f 5f       	subi	r24, 0xFF	; 255
     b42:	80 93 e2 01 	sts	0x01E2, r24
     b46:	80 91 e2 01 	lds	r24, 0x01E2
     b4a:	87 30       	cpi	r24, 0x07	; 7
     b4c:	10 f0       	brcs	.+4      	; 0xb52 <oled_goto_nextln+0x16>
     b4e:	10 92 e2 01 	sts	0x01E2, r1
     b52:	60 91 e2 01 	lds	r22, 0x01E2
     b56:	80 e0       	ldi	r24, 0x00	; 0
     b58:	0e 94 8d 05 	call	0xb1a	; 0xb1a <oled_goto_xy>
     b5c:	08 95       	ret

00000b5e <oled_putchar>:
     b5e:	cf 93       	push	r28
     b60:	8a 30       	cpi	r24, 0x0A	; 10
     b62:	19 f4       	brne	.+6      	; 0xb6a <oled_putchar+0xc>
     b64:	0e 94 9e 05 	call	0xb3c	; 0xb3c <oled_goto_nextln>
     b68:	29 c0       	rjmp	.+82     	; 0xbbc <oled_putchar+0x5e>
     b6a:	c0 ee       	ldi	r28, 0xE0	; 224
     b6c:	c8 0f       	add	r28, r24
     b6e:	80 91 e3 01 	lds	r24, 0x01E3
     b72:	8b 5f       	subi	r24, 0xFB	; 251
     b74:	80 93 e3 01 	sts	0x01E3, r24
     b78:	80 91 e3 01 	lds	r24, 0x01E3
     b7c:	8d 37       	cpi	r24, 0x7D	; 125
     b7e:	70 f0       	brcs	.+28     	; 0xb9c <oled_putchar+0x3e>
     b80:	0e 94 9e 05 	call	0xb3c	; 0xb3c <oled_goto_nextln>
     b84:	0b c0       	rjmp	.+22     	; 0xb9c <oled_putchar+0x3e>
     b86:	fc 01       	movw	r30, r24
     b88:	e2 0f       	add	r30, r18
     b8a:	f3 1f       	adc	r31, r19
     b8c:	e4 91       	lpm	r30, Z
     b8e:	ec 93       	st	X, r30
     b90:	2f 5f       	subi	r18, 0xFF	; 255
     b92:	3f 4f       	sbci	r19, 0xFF	; 255
     b94:	25 30       	cpi	r18, 0x05	; 5
     b96:	31 05       	cpc	r19, r1
     b98:	b1 f7       	brne	.-20     	; 0xb86 <oled_putchar+0x28>
     b9a:	10 c0       	rjmp	.+32     	; 0xbbc <oled_putchar+0x5e>
     b9c:	8c 2f       	mov	r24, r28
     b9e:	90 e0       	ldi	r25, 0x00	; 0
     ba0:	9c 01       	movw	r18, r24
     ba2:	22 0f       	add	r18, r18
     ba4:	33 1f       	adc	r19, r19
     ba6:	22 0f       	add	r18, r18
     ba8:	33 1f       	adc	r19, r19
     baa:	82 0f       	add	r24, r18
     bac:	93 1f       	adc	r25, r19
     bae:	20 e0       	ldi	r18, 0x00	; 0
     bb0:	30 e0       	ldi	r19, 0x00	; 0
     bb2:	80 59       	subi	r24, 0x90	; 144
     bb4:	9f 4f       	sbci	r25, 0xFF	; 255
     bb6:	af e0       	ldi	r26, 0x0F	; 15
     bb8:	b2 e1       	ldi	r27, 0x12	; 18
     bba:	e5 cf       	rjmp	.-54     	; 0xb86 <oled_putchar+0x28>
     bbc:	cf 91       	pop	r28
     bbe:	08 95       	ret

00000bc0 <oled_clear>:
     bc0:	10 92 e3 01 	sts	0x01E3, r1
     bc4:	10 92 e2 01 	sts	0x01E2, r1
     bc8:	ef e0       	ldi	r30, 0x0F	; 15
     bca:	f0 e1       	ldi	r31, 0x10	; 16
     bcc:	8e ea       	ldi	r24, 0xAE	; 174
     bce:	80 83       	st	Z, r24
     bd0:	80 e2       	ldi	r24, 0x20	; 32
     bd2:	80 83       	st	Z, r24
     bd4:	10 82       	st	Z, r1
     bd6:	81 e2       	ldi	r24, 0x21	; 33
     bd8:	80 83       	st	Z, r24
     bda:	10 82       	st	Z, r1
     bdc:	8f e7       	ldi	r24, 0x7F	; 127
     bde:	80 83       	st	Z, r24
     be0:	82 e2       	ldi	r24, 0x22	; 34
     be2:	80 83       	st	Z, r24
     be4:	10 82       	st	Z, r1
     be6:	87 e0       	ldi	r24, 0x07	; 7
     be8:	80 83       	st	Z, r24
     bea:	80 e4       	ldi	r24, 0x40	; 64
     bec:	80 83       	st	Z, r24
     bee:	80 e0       	ldi	r24, 0x00	; 0
     bf0:	94 e0       	ldi	r25, 0x04	; 4
     bf2:	ef e0       	ldi	r30, 0x0F	; 15
     bf4:	f2 e1       	ldi	r31, 0x12	; 18
     bf6:	10 82       	st	Z, r1
     bf8:	01 97       	sbiw	r24, 0x01	; 1
     bfa:	00 97       	sbiw	r24, 0x00	; 0
     bfc:	e1 f7       	brne	.-8      	; 0xbf6 <oled_clear+0x36>
     bfe:	ef e0       	ldi	r30, 0x0F	; 15
     c00:	f0 e1       	ldi	r31, 0x10	; 16
     c02:	81 e2       	ldi	r24, 0x21	; 33
     c04:	80 83       	st	Z, r24
     c06:	10 82       	st	Z, r1
     c08:	8f e7       	ldi	r24, 0x7F	; 127
     c0a:	80 83       	st	Z, r24
     c0c:	82 e2       	ldi	r24, 0x22	; 34
     c0e:	80 83       	st	Z, r24
     c10:	10 82       	st	Z, r1
     c12:	86 e0       	ldi	r24, 0x06	; 6
     c14:	80 83       	st	Z, r24
     c16:	8c e7       	ldi	r24, 0x7C	; 124
     c18:	80 83       	st	Z, r24
     c1a:	8f ea       	ldi	r24, 0xAF	; 175
     c1c:	80 83       	st	Z, r24
     c1e:	60 e0       	ldi	r22, 0x00	; 0
     c20:	80 e0       	ldi	r24, 0x00	; 0
     c22:	0e 94 8d 05 	call	0xb1a	; 0xb1a <oled_goto_xy>
     c26:	08 95       	ret

00000c28 <oled_putchar_printf>:
     c28:	8d 30       	cpi	r24, 0x0D	; 13
     c2a:	11 f0       	breq	.+4      	; 0xc30 <oled_putchar_printf+0x8>
     c2c:	8a 30       	cpi	r24, 0x0A	; 10
     c2e:	19 f4       	brne	.+6      	; 0xc36 <oled_putchar_printf+0xe>
     c30:	0e 94 9e 05 	call	0xb3c	; 0xb3c <oled_goto_nextln>
     c34:	02 c0       	rjmp	.+4      	; 0xc3a <oled_putchar_printf+0x12>
     c36:	0e 94 af 05 	call	0xb5e	; 0xb5e <oled_putchar>
     c3a:	80 e0       	ldi	r24, 0x00	; 0
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	08 95       	ret

00000c40 <oled_putchar_inverse>:
     c40:	cf 93       	push	r28
     c42:	8a 30       	cpi	r24, 0x0A	; 10
     c44:	19 f4       	brne	.+6      	; 0xc4c <oled_putchar_inverse+0xc>
     c46:	0e 94 9e 05 	call	0xb3c	; 0xb3c <oled_goto_nextln>
     c4a:	2a c0       	rjmp	.+84     	; 0xca0 <oled_putchar_inverse+0x60>
     c4c:	c0 ee       	ldi	r28, 0xE0	; 224
     c4e:	c8 0f       	add	r28, r24
     c50:	80 91 e3 01 	lds	r24, 0x01E3
     c54:	8b 5f       	subi	r24, 0xFB	; 251
     c56:	80 93 e3 01 	sts	0x01E3, r24
     c5a:	80 91 e3 01 	lds	r24, 0x01E3
     c5e:	8d 37       	cpi	r24, 0x7D	; 125
     c60:	78 f0       	brcs	.+30     	; 0xc80 <oled_putchar_inverse+0x40>
     c62:	0e 94 9e 05 	call	0xb3c	; 0xb3c <oled_goto_nextln>
     c66:	0c c0       	rjmp	.+24     	; 0xc80 <oled_putchar_inverse+0x40>
     c68:	fc 01       	movw	r30, r24
     c6a:	e2 0f       	add	r30, r18
     c6c:	f3 1f       	adc	r31, r19
     c6e:	e4 91       	lpm	r30, Z
     c70:	e0 95       	com	r30
     c72:	ec 93       	st	X, r30
     c74:	2f 5f       	subi	r18, 0xFF	; 255
     c76:	3f 4f       	sbci	r19, 0xFF	; 255
     c78:	25 30       	cpi	r18, 0x05	; 5
     c7a:	31 05       	cpc	r19, r1
     c7c:	a9 f7       	brne	.-22     	; 0xc68 <oled_putchar_inverse+0x28>
     c7e:	10 c0       	rjmp	.+32     	; 0xca0 <oled_putchar_inverse+0x60>
     c80:	8c 2f       	mov	r24, r28
     c82:	90 e0       	ldi	r25, 0x00	; 0
     c84:	9c 01       	movw	r18, r24
     c86:	22 0f       	add	r18, r18
     c88:	33 1f       	adc	r19, r19
     c8a:	22 0f       	add	r18, r18
     c8c:	33 1f       	adc	r19, r19
     c8e:	82 0f       	add	r24, r18
     c90:	93 1f       	adc	r25, r19
     c92:	20 e0       	ldi	r18, 0x00	; 0
     c94:	30 e0       	ldi	r19, 0x00	; 0
     c96:	80 59       	subi	r24, 0x90	; 144
     c98:	9f 4f       	sbci	r25, 0xFF	; 255
     c9a:	af e0       	ldi	r26, 0x0F	; 15
     c9c:	b2 e1       	ldi	r27, 0x12	; 18
     c9e:	e4 cf       	rjmp	.-56     	; 0xc68 <oled_putchar_inverse+0x28>
     ca0:	cf 91       	pop	r28
     ca2:	08 95       	ret

00000ca4 <oled_putstr_inverse>:
     ca4:	cf 93       	push	r28
     ca6:	df 93       	push	r29
     ca8:	ec 01       	movw	r28, r24
     caa:	88 81       	ld	r24, Y
     cac:	88 23       	and	r24, r24
     cae:	31 f0       	breq	.+12     	; 0xcbc <oled_putstr_inverse+0x18>
     cb0:	21 96       	adiw	r28, 0x01	; 1
     cb2:	0e 94 20 06 	call	0xc40	; 0xc40 <oled_putchar_inverse>
     cb6:	89 91       	ld	r24, Y+
     cb8:	81 11       	cpse	r24, r1
     cba:	fb cf       	rjmp	.-10     	; 0xcb2 <oled_putstr_inverse+0xe>
     cbc:	df 91       	pop	r29
     cbe:	cf 91       	pop	r28
     cc0:	08 95       	ret

00000cc2 <usart_init>:
     cc2:	9c bf       	out	0x3c, r25	; 60
     cc4:	80 b9       	out	0x00, r24	; 0
     cc6:	88 e1       	ldi	r24, 0x18	; 24
     cc8:	81 b9       	out	0x01, r24	; 1
     cca:	86 e8       	ldi	r24, 0x86	; 134
     ccc:	8c bf       	out	0x3c, r24	; 60
     cce:	08 95       	ret

00000cd0 <usart_putchar>:
     cd0:	15 9b       	sbis	0x02, 5	; 2
     cd2:	fe cf       	rjmp	.-4      	; 0xcd0 <usart_putchar>
     cd4:	83 b9       	out	0x03, r24	; 3
     cd6:	08 95       	ret

00000cd8 <usart_putchar_printf>:
     cd8:	cf 93       	push	r28
     cda:	c8 2f       	mov	r28, r24
     cdc:	8a 30       	cpi	r24, 0x0A	; 10
     cde:	19 f4       	brne	.+6      	; 0xce6 <usart_putchar_printf+0xe>
     ce0:	8d e0       	ldi	r24, 0x0D	; 13
     ce2:	0e 94 68 06 	call	0xcd0	; 0xcd0 <usart_putchar>
     ce6:	8c 2f       	mov	r24, r28
     ce8:	0e 94 68 06 	call	0xcd0	; 0xcd0 <usart_putchar>
     cec:	80 e0       	ldi	r24, 0x00	; 0
     cee:	90 e0       	ldi	r25, 0x00	; 0
     cf0:	cf 91       	pop	r28
     cf2:	08 95       	ret

00000cf4 <__divmodhi4>:
     cf4:	97 fb       	bst	r25, 7
     cf6:	07 2e       	mov	r0, r23
     cf8:	16 f4       	brtc	.+4      	; 0xcfe <__divmodhi4+0xa>
     cfa:	00 94       	com	r0
     cfc:	07 d0       	rcall	.+14     	; 0xd0c <__divmodhi4_neg1>
     cfe:	77 fd       	sbrc	r23, 7
     d00:	09 d0       	rcall	.+18     	; 0xd14 <__divmodhi4_neg2>
     d02:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__udivmodhi4>
     d06:	07 fc       	sbrc	r0, 7
     d08:	05 d0       	rcall	.+10     	; 0xd14 <__divmodhi4_neg2>
     d0a:	3e f4       	brtc	.+14     	; 0xd1a <__divmodhi4_exit>

00000d0c <__divmodhi4_neg1>:
     d0c:	90 95       	com	r25
     d0e:	81 95       	neg	r24
     d10:	9f 4f       	sbci	r25, 0xFF	; 255
     d12:	08 95       	ret

00000d14 <__divmodhi4_neg2>:
     d14:	70 95       	com	r23
     d16:	61 95       	neg	r22
     d18:	7f 4f       	sbci	r23, 0xFF	; 255

00000d1a <__divmodhi4_exit>:
     d1a:	08 95       	ret

00000d1c <__umulhisi3>:
     d1c:	a2 9f       	mul	r26, r18
     d1e:	b0 01       	movw	r22, r0
     d20:	b3 9f       	mul	r27, r19
     d22:	c0 01       	movw	r24, r0
     d24:	a3 9f       	mul	r26, r19
     d26:	70 0d       	add	r23, r0
     d28:	81 1d       	adc	r24, r1
     d2a:	11 24       	eor	r1, r1
     d2c:	91 1d       	adc	r25, r1
     d2e:	b2 9f       	mul	r27, r18
     d30:	70 0d       	add	r23, r0
     d32:	81 1d       	adc	r24, r1
     d34:	11 24       	eor	r1, r1
     d36:	91 1d       	adc	r25, r1
     d38:	08 95       	ret

00000d3a <__udivmodhi4>:
     d3a:	aa 1b       	sub	r26, r26
     d3c:	bb 1b       	sub	r27, r27
     d3e:	51 e1       	ldi	r21, 0x11	; 17
     d40:	07 c0       	rjmp	.+14     	; 0xd50 <__udivmodhi4_ep>

00000d42 <__udivmodhi4_loop>:
     d42:	aa 1f       	adc	r26, r26
     d44:	bb 1f       	adc	r27, r27
     d46:	a6 17       	cp	r26, r22
     d48:	b7 07       	cpc	r27, r23
     d4a:	10 f0       	brcs	.+4      	; 0xd50 <__udivmodhi4_ep>
     d4c:	a6 1b       	sub	r26, r22
     d4e:	b7 0b       	sbc	r27, r23

00000d50 <__udivmodhi4_ep>:
     d50:	88 1f       	adc	r24, r24
     d52:	99 1f       	adc	r25, r25
     d54:	5a 95       	dec	r21
     d56:	a9 f7       	brne	.-22     	; 0xd42 <__udivmodhi4_loop>
     d58:	80 95       	com	r24
     d5a:	90 95       	com	r25
     d5c:	bc 01       	movw	r22, r24
     d5e:	cd 01       	movw	r24, r26
     d60:	08 95       	ret

00000d62 <fwrite>:
     d62:	a0 e0       	ldi	r26, 0x00	; 0
     d64:	b0 e0       	ldi	r27, 0x00	; 0
     d66:	e7 eb       	ldi	r30, 0xB7	; 183
     d68:	f6 e0       	ldi	r31, 0x06	; 6
     d6a:	0c 94 77 09 	jmp	0x12ee	; 0x12ee <__prologue_saves__+0xc>
     d6e:	6b 01       	movw	r12, r22
     d70:	4a 01       	movw	r8, r20
     d72:	79 01       	movw	r14, r18
     d74:	d9 01       	movw	r26, r18
     d76:	13 96       	adiw	r26, 0x03	; 3
     d78:	2c 91       	ld	r18, X
     d7a:	21 ff       	sbrs	r18, 1
     d7c:	1d c0       	rjmp	.+58     	; 0xdb8 <fwrite+0x56>
     d7e:	c0 e0       	ldi	r28, 0x00	; 0
     d80:	d0 e0       	ldi	r29, 0x00	; 0
     d82:	c8 15       	cp	r28, r8
     d84:	d9 05       	cpc	r29, r9
     d86:	d9 f0       	breq	.+54     	; 0xdbe <fwrite+0x5c>
     d88:	8c 01       	movw	r16, r24
     d8a:	5c 01       	movw	r10, r24
     d8c:	ac 0c       	add	r10, r12
     d8e:	bd 1c       	adc	r11, r13
     d90:	c8 01       	movw	r24, r16
     d92:	0a 15       	cp	r16, r10
     d94:	1b 05       	cpc	r17, r11
     d96:	71 f0       	breq	.+28     	; 0xdb4 <fwrite+0x52>
     d98:	0f 5f       	subi	r16, 0xFF	; 255
     d9a:	1f 4f       	sbci	r17, 0xFF	; 255
     d9c:	d7 01       	movw	r26, r14
     d9e:	18 96       	adiw	r26, 0x08	; 8
     da0:	ed 91       	ld	r30, X+
     da2:	fc 91       	ld	r31, X
     da4:	19 97       	sbiw	r26, 0x09	; 9
     da6:	b7 01       	movw	r22, r14
     da8:	dc 01       	movw	r26, r24
     daa:	8c 91       	ld	r24, X
     dac:	09 95       	icall
     dae:	89 2b       	or	r24, r25
     db0:	79 f3       	breq	.-34     	; 0xd90 <fwrite+0x2e>
     db2:	05 c0       	rjmp	.+10     	; 0xdbe <fwrite+0x5c>
     db4:	21 96       	adiw	r28, 0x01	; 1
     db6:	e5 cf       	rjmp	.-54     	; 0xd82 <fwrite+0x20>
     db8:	80 e0       	ldi	r24, 0x00	; 0
     dba:	90 e0       	ldi	r25, 0x00	; 0
     dbc:	01 c0       	rjmp	.+2      	; 0xdc0 <fwrite+0x5e>
     dbe:	ce 01       	movw	r24, r28
     dc0:	cd b7       	in	r28, 0x3d	; 61
     dc2:	de b7       	in	r29, 0x3e	; 62
     dc4:	ec e0       	ldi	r30, 0x0C	; 12
     dc6:	0c 94 93 09 	jmp	0x1326	; 0x1326 <__epilogue_restores__+0xc>

00000dca <printf>:
     dca:	a0 e0       	ldi	r26, 0x00	; 0
     dcc:	b0 e0       	ldi	r27, 0x00	; 0
     dce:	eb ee       	ldi	r30, 0xEB	; 235
     dd0:	f6 e0       	ldi	r31, 0x06	; 6
     dd2:	0c 94 81 09 	jmp	0x1302	; 0x1302 <__prologue_saves__+0x20>
     dd6:	fe 01       	movw	r30, r28
     dd8:	35 96       	adiw	r30, 0x05	; 5
     dda:	61 91       	ld	r22, Z+
     ddc:	71 91       	ld	r23, Z+
     dde:	af 01       	movw	r20, r30
     de0:	80 91 e6 01 	lds	r24, 0x01E6
     de4:	90 91 e7 01 	lds	r25, 0x01E7
     de8:	0e 94 f9 06 	call	0xdf2	; 0xdf2 <vfprintf>
     dec:	e2 e0       	ldi	r30, 0x02	; 2
     dee:	0c 94 9d 09 	jmp	0x133a	; 0x133a <__epilogue_restores__+0x20>

00000df2 <vfprintf>:
     df2:	ac e0       	ldi	r26, 0x0C	; 12
     df4:	b0 e0       	ldi	r27, 0x00	; 0
     df6:	ef ef       	ldi	r30, 0xFF	; 255
     df8:	f6 e0       	ldi	r31, 0x06	; 6
     dfa:	0c 94 71 09 	jmp	0x12e2	; 0x12e2 <__prologue_saves__>
     dfe:	7c 01       	movw	r14, r24
     e00:	6b 01       	movw	r12, r22
     e02:	8a 01       	movw	r16, r20
     e04:	fc 01       	movw	r30, r24
     e06:	17 82       	std	Z+7, r1	; 0x07
     e08:	16 82       	std	Z+6, r1	; 0x06
     e0a:	83 81       	ldd	r24, Z+3	; 0x03
     e0c:	81 ff       	sbrs	r24, 1
     e0e:	bd c1       	rjmp	.+890    	; 0x118a <vfprintf+0x398>
     e10:	ce 01       	movw	r24, r28
     e12:	01 96       	adiw	r24, 0x01	; 1
     e14:	4c 01       	movw	r8, r24
     e16:	f7 01       	movw	r30, r14
     e18:	93 81       	ldd	r25, Z+3	; 0x03
     e1a:	f6 01       	movw	r30, r12
     e1c:	93 fd       	sbrc	r25, 3
     e1e:	85 91       	lpm	r24, Z+
     e20:	93 ff       	sbrs	r25, 3
     e22:	81 91       	ld	r24, Z+
     e24:	6f 01       	movw	r12, r30
     e26:	88 23       	and	r24, r24
     e28:	09 f4       	brne	.+2      	; 0xe2c <vfprintf+0x3a>
     e2a:	ab c1       	rjmp	.+854    	; 0x1182 <vfprintf+0x390>
     e2c:	85 32       	cpi	r24, 0x25	; 37
     e2e:	39 f4       	brne	.+14     	; 0xe3e <vfprintf+0x4c>
     e30:	93 fd       	sbrc	r25, 3
     e32:	85 91       	lpm	r24, Z+
     e34:	93 ff       	sbrs	r25, 3
     e36:	81 91       	ld	r24, Z+
     e38:	6f 01       	movw	r12, r30
     e3a:	85 32       	cpi	r24, 0x25	; 37
     e3c:	29 f4       	brne	.+10     	; 0xe48 <vfprintf+0x56>
     e3e:	b7 01       	movw	r22, r14
     e40:	90 e0       	ldi	r25, 0x00	; 0
     e42:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <fputc>
     e46:	e7 cf       	rjmp	.-50     	; 0xe16 <vfprintf+0x24>
     e48:	51 2c       	mov	r5, r1
     e4a:	31 2c       	mov	r3, r1
     e4c:	20 e0       	ldi	r18, 0x00	; 0
     e4e:	20 32       	cpi	r18, 0x20	; 32
     e50:	a0 f4       	brcc	.+40     	; 0xe7a <vfprintf+0x88>
     e52:	8b 32       	cpi	r24, 0x2B	; 43
     e54:	69 f0       	breq	.+26     	; 0xe70 <vfprintf+0x7e>
     e56:	30 f4       	brcc	.+12     	; 0xe64 <vfprintf+0x72>
     e58:	80 32       	cpi	r24, 0x20	; 32
     e5a:	59 f0       	breq	.+22     	; 0xe72 <vfprintf+0x80>
     e5c:	83 32       	cpi	r24, 0x23	; 35
     e5e:	69 f4       	brne	.+26     	; 0xe7a <vfprintf+0x88>
     e60:	20 61       	ori	r18, 0x10	; 16
     e62:	2c c0       	rjmp	.+88     	; 0xebc <vfprintf+0xca>
     e64:	8d 32       	cpi	r24, 0x2D	; 45
     e66:	39 f0       	breq	.+14     	; 0xe76 <vfprintf+0x84>
     e68:	80 33       	cpi	r24, 0x30	; 48
     e6a:	39 f4       	brne	.+14     	; 0xe7a <vfprintf+0x88>
     e6c:	21 60       	ori	r18, 0x01	; 1
     e6e:	26 c0       	rjmp	.+76     	; 0xebc <vfprintf+0xca>
     e70:	22 60       	ori	r18, 0x02	; 2
     e72:	24 60       	ori	r18, 0x04	; 4
     e74:	23 c0       	rjmp	.+70     	; 0xebc <vfprintf+0xca>
     e76:	28 60       	ori	r18, 0x08	; 8
     e78:	21 c0       	rjmp	.+66     	; 0xebc <vfprintf+0xca>
     e7a:	27 fd       	sbrc	r18, 7
     e7c:	27 c0       	rjmp	.+78     	; 0xecc <vfprintf+0xda>
     e7e:	30 ed       	ldi	r19, 0xD0	; 208
     e80:	38 0f       	add	r19, r24
     e82:	3a 30       	cpi	r19, 0x0A	; 10
     e84:	78 f4       	brcc	.+30     	; 0xea4 <vfprintf+0xb2>
     e86:	26 ff       	sbrs	r18, 6
     e88:	06 c0       	rjmp	.+12     	; 0xe96 <vfprintf+0xa4>
     e8a:	fa e0       	ldi	r31, 0x0A	; 10
     e8c:	5f 9e       	mul	r5, r31
     e8e:	30 0d       	add	r19, r0
     e90:	11 24       	eor	r1, r1
     e92:	53 2e       	mov	r5, r19
     e94:	13 c0       	rjmp	.+38     	; 0xebc <vfprintf+0xca>
     e96:	8a e0       	ldi	r24, 0x0A	; 10
     e98:	38 9e       	mul	r3, r24
     e9a:	30 0d       	add	r19, r0
     e9c:	11 24       	eor	r1, r1
     e9e:	33 2e       	mov	r3, r19
     ea0:	20 62       	ori	r18, 0x20	; 32
     ea2:	0c c0       	rjmp	.+24     	; 0xebc <vfprintf+0xca>
     ea4:	8e 32       	cpi	r24, 0x2E	; 46
     ea6:	21 f4       	brne	.+8      	; 0xeb0 <vfprintf+0xbe>
     ea8:	26 fd       	sbrc	r18, 6
     eaa:	6b c1       	rjmp	.+726    	; 0x1182 <vfprintf+0x390>
     eac:	20 64       	ori	r18, 0x40	; 64
     eae:	06 c0       	rjmp	.+12     	; 0xebc <vfprintf+0xca>
     eb0:	8c 36       	cpi	r24, 0x6C	; 108
     eb2:	11 f4       	brne	.+4      	; 0xeb8 <vfprintf+0xc6>
     eb4:	20 68       	ori	r18, 0x80	; 128
     eb6:	02 c0       	rjmp	.+4      	; 0xebc <vfprintf+0xca>
     eb8:	88 36       	cpi	r24, 0x68	; 104
     eba:	41 f4       	brne	.+16     	; 0xecc <vfprintf+0xda>
     ebc:	f6 01       	movw	r30, r12
     ebe:	93 fd       	sbrc	r25, 3
     ec0:	85 91       	lpm	r24, Z+
     ec2:	93 ff       	sbrs	r25, 3
     ec4:	81 91       	ld	r24, Z+
     ec6:	6f 01       	movw	r12, r30
     ec8:	81 11       	cpse	r24, r1
     eca:	c1 cf       	rjmp	.-126    	; 0xe4e <vfprintf+0x5c>
     ecc:	98 2f       	mov	r25, r24
     ece:	9f 7d       	andi	r25, 0xDF	; 223
     ed0:	95 54       	subi	r25, 0x45	; 69
     ed2:	93 30       	cpi	r25, 0x03	; 3
     ed4:	28 f4       	brcc	.+10     	; 0xee0 <vfprintf+0xee>
     ed6:	0c 5f       	subi	r16, 0xFC	; 252
     ed8:	1f 4f       	sbci	r17, 0xFF	; 255
     eda:	ff e3       	ldi	r31, 0x3F	; 63
     edc:	f9 83       	std	Y+1, r31	; 0x01
     ede:	0d c0       	rjmp	.+26     	; 0xefa <vfprintf+0x108>
     ee0:	83 36       	cpi	r24, 0x63	; 99
     ee2:	31 f0       	breq	.+12     	; 0xef0 <vfprintf+0xfe>
     ee4:	83 37       	cpi	r24, 0x73	; 115
     ee6:	71 f0       	breq	.+28     	; 0xf04 <vfprintf+0x112>
     ee8:	83 35       	cpi	r24, 0x53	; 83
     eea:	09 f0       	breq	.+2      	; 0xeee <vfprintf+0xfc>
     eec:	5b c0       	rjmp	.+182    	; 0xfa4 <vfprintf+0x1b2>
     eee:	22 c0       	rjmp	.+68     	; 0xf34 <vfprintf+0x142>
     ef0:	f8 01       	movw	r30, r16
     ef2:	80 81       	ld	r24, Z
     ef4:	89 83       	std	Y+1, r24	; 0x01
     ef6:	0e 5f       	subi	r16, 0xFE	; 254
     ef8:	1f 4f       	sbci	r17, 0xFF	; 255
     efa:	44 24       	eor	r4, r4
     efc:	43 94       	inc	r4
     efe:	51 2c       	mov	r5, r1
     f00:	54 01       	movw	r10, r8
     f02:	15 c0       	rjmp	.+42     	; 0xf2e <vfprintf+0x13c>
     f04:	38 01       	movw	r6, r16
     f06:	f2 e0       	ldi	r31, 0x02	; 2
     f08:	6f 0e       	add	r6, r31
     f0a:	71 1c       	adc	r7, r1
     f0c:	f8 01       	movw	r30, r16
     f0e:	a0 80       	ld	r10, Z
     f10:	b1 80       	ldd	r11, Z+1	; 0x01
     f12:	26 ff       	sbrs	r18, 6
     f14:	03 c0       	rjmp	.+6      	; 0xf1c <vfprintf+0x12a>
     f16:	65 2d       	mov	r22, r5
     f18:	70 e0       	ldi	r23, 0x00	; 0
     f1a:	02 c0       	rjmp	.+4      	; 0xf20 <vfprintf+0x12e>
     f1c:	6f ef       	ldi	r22, 0xFF	; 255
     f1e:	7f ef       	ldi	r23, 0xFF	; 255
     f20:	c5 01       	movw	r24, r10
     f22:	2c 87       	std	Y+12, r18	; 0x0c
     f24:	0e 94 d6 08 	call	0x11ac	; 0x11ac <strnlen>
     f28:	2c 01       	movw	r4, r24
     f2a:	83 01       	movw	r16, r6
     f2c:	2c 85       	ldd	r18, Y+12	; 0x0c
     f2e:	2f 77       	andi	r18, 0x7F	; 127
     f30:	22 2e       	mov	r2, r18
     f32:	17 c0       	rjmp	.+46     	; 0xf62 <vfprintf+0x170>
     f34:	38 01       	movw	r6, r16
     f36:	f2 e0       	ldi	r31, 0x02	; 2
     f38:	6f 0e       	add	r6, r31
     f3a:	71 1c       	adc	r7, r1
     f3c:	f8 01       	movw	r30, r16
     f3e:	a0 80       	ld	r10, Z
     f40:	b1 80       	ldd	r11, Z+1	; 0x01
     f42:	26 ff       	sbrs	r18, 6
     f44:	03 c0       	rjmp	.+6      	; 0xf4c <vfprintf+0x15a>
     f46:	65 2d       	mov	r22, r5
     f48:	70 e0       	ldi	r23, 0x00	; 0
     f4a:	02 c0       	rjmp	.+4      	; 0xf50 <vfprintf+0x15e>
     f4c:	6f ef       	ldi	r22, 0xFF	; 255
     f4e:	7f ef       	ldi	r23, 0xFF	; 255
     f50:	c5 01       	movw	r24, r10
     f52:	2c 87       	std	Y+12, r18	; 0x0c
     f54:	0e 94 cb 08 	call	0x1196	; 0x1196 <strnlen_P>
     f58:	2c 01       	movw	r4, r24
     f5a:	2c 85       	ldd	r18, Y+12	; 0x0c
     f5c:	20 68       	ori	r18, 0x80	; 128
     f5e:	22 2e       	mov	r2, r18
     f60:	83 01       	movw	r16, r6
     f62:	23 fc       	sbrc	r2, 3
     f64:	1b c0       	rjmp	.+54     	; 0xf9c <vfprintf+0x1aa>
     f66:	83 2d       	mov	r24, r3
     f68:	90 e0       	ldi	r25, 0x00	; 0
     f6a:	48 16       	cp	r4, r24
     f6c:	59 06       	cpc	r5, r25
     f6e:	b0 f4       	brcc	.+44     	; 0xf9c <vfprintf+0x1aa>
     f70:	b7 01       	movw	r22, r14
     f72:	80 e2       	ldi	r24, 0x20	; 32
     f74:	90 e0       	ldi	r25, 0x00	; 0
     f76:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <fputc>
     f7a:	3a 94       	dec	r3
     f7c:	f4 cf       	rjmp	.-24     	; 0xf66 <vfprintf+0x174>
     f7e:	f5 01       	movw	r30, r10
     f80:	27 fc       	sbrc	r2, 7
     f82:	85 91       	lpm	r24, Z+
     f84:	27 fe       	sbrs	r2, 7
     f86:	81 91       	ld	r24, Z+
     f88:	5f 01       	movw	r10, r30
     f8a:	b7 01       	movw	r22, r14
     f8c:	90 e0       	ldi	r25, 0x00	; 0
     f8e:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <fputc>
     f92:	31 10       	cpse	r3, r1
     f94:	3a 94       	dec	r3
     f96:	f1 e0       	ldi	r31, 0x01	; 1
     f98:	4f 1a       	sub	r4, r31
     f9a:	51 08       	sbc	r5, r1
     f9c:	41 14       	cp	r4, r1
     f9e:	51 04       	cpc	r5, r1
     fa0:	71 f7       	brne	.-36     	; 0xf7e <vfprintf+0x18c>
     fa2:	e5 c0       	rjmp	.+458    	; 0x116e <vfprintf+0x37c>
     fa4:	84 36       	cpi	r24, 0x64	; 100
     fa6:	11 f0       	breq	.+4      	; 0xfac <vfprintf+0x1ba>
     fa8:	89 36       	cpi	r24, 0x69	; 105
     faa:	39 f5       	brne	.+78     	; 0xffa <vfprintf+0x208>
     fac:	f8 01       	movw	r30, r16
     fae:	27 ff       	sbrs	r18, 7
     fb0:	07 c0       	rjmp	.+14     	; 0xfc0 <vfprintf+0x1ce>
     fb2:	60 81       	ld	r22, Z
     fb4:	71 81       	ldd	r23, Z+1	; 0x01
     fb6:	82 81       	ldd	r24, Z+2	; 0x02
     fb8:	93 81       	ldd	r25, Z+3	; 0x03
     fba:	0c 5f       	subi	r16, 0xFC	; 252
     fbc:	1f 4f       	sbci	r17, 0xFF	; 255
     fbe:	08 c0       	rjmp	.+16     	; 0xfd0 <vfprintf+0x1de>
     fc0:	60 81       	ld	r22, Z
     fc2:	71 81       	ldd	r23, Z+1	; 0x01
     fc4:	88 27       	eor	r24, r24
     fc6:	77 fd       	sbrc	r23, 7
     fc8:	80 95       	com	r24
     fca:	98 2f       	mov	r25, r24
     fcc:	0e 5f       	subi	r16, 0xFE	; 254
     fce:	1f 4f       	sbci	r17, 0xFF	; 255
     fd0:	2f 76       	andi	r18, 0x6F	; 111
     fd2:	b2 2e       	mov	r11, r18
     fd4:	97 ff       	sbrs	r25, 7
     fd6:	09 c0       	rjmp	.+18     	; 0xfea <vfprintf+0x1f8>
     fd8:	90 95       	com	r25
     fda:	80 95       	com	r24
     fdc:	70 95       	com	r23
     fde:	61 95       	neg	r22
     fe0:	7f 4f       	sbci	r23, 0xFF	; 255
     fe2:	8f 4f       	sbci	r24, 0xFF	; 255
     fe4:	9f 4f       	sbci	r25, 0xFF	; 255
     fe6:	20 68       	ori	r18, 0x80	; 128
     fe8:	b2 2e       	mov	r11, r18
     fea:	2a e0       	ldi	r18, 0x0A	; 10
     fec:	30 e0       	ldi	r19, 0x00	; 0
     fee:	a4 01       	movw	r20, r8
     ff0:	0e 94 13 09 	call	0x1226	; 0x1226 <__ultoa_invert>
     ff4:	a8 2e       	mov	r10, r24
     ff6:	a8 18       	sub	r10, r8
     ff8:	44 c0       	rjmp	.+136    	; 0x1082 <vfprintf+0x290>
     ffa:	85 37       	cpi	r24, 0x75	; 117
     ffc:	29 f4       	brne	.+10     	; 0x1008 <vfprintf+0x216>
     ffe:	2f 7e       	andi	r18, 0xEF	; 239
    1000:	b2 2e       	mov	r11, r18
    1002:	2a e0       	ldi	r18, 0x0A	; 10
    1004:	30 e0       	ldi	r19, 0x00	; 0
    1006:	25 c0       	rjmp	.+74     	; 0x1052 <vfprintf+0x260>
    1008:	f2 2f       	mov	r31, r18
    100a:	f9 7f       	andi	r31, 0xF9	; 249
    100c:	bf 2e       	mov	r11, r31
    100e:	8f 36       	cpi	r24, 0x6F	; 111
    1010:	c1 f0       	breq	.+48     	; 0x1042 <vfprintf+0x250>
    1012:	18 f4       	brcc	.+6      	; 0x101a <vfprintf+0x228>
    1014:	88 35       	cpi	r24, 0x58	; 88
    1016:	79 f0       	breq	.+30     	; 0x1036 <vfprintf+0x244>
    1018:	b4 c0       	rjmp	.+360    	; 0x1182 <vfprintf+0x390>
    101a:	80 37       	cpi	r24, 0x70	; 112
    101c:	19 f0       	breq	.+6      	; 0x1024 <vfprintf+0x232>
    101e:	88 37       	cpi	r24, 0x78	; 120
    1020:	21 f0       	breq	.+8      	; 0x102a <vfprintf+0x238>
    1022:	af c0       	rjmp	.+350    	; 0x1182 <vfprintf+0x390>
    1024:	2f 2f       	mov	r18, r31
    1026:	20 61       	ori	r18, 0x10	; 16
    1028:	b2 2e       	mov	r11, r18
    102a:	b4 fe       	sbrs	r11, 4
    102c:	0d c0       	rjmp	.+26     	; 0x1048 <vfprintf+0x256>
    102e:	8b 2d       	mov	r24, r11
    1030:	84 60       	ori	r24, 0x04	; 4
    1032:	b8 2e       	mov	r11, r24
    1034:	09 c0       	rjmp	.+18     	; 0x1048 <vfprintf+0x256>
    1036:	24 ff       	sbrs	r18, 4
    1038:	0a c0       	rjmp	.+20     	; 0x104e <vfprintf+0x25c>
    103a:	9f 2f       	mov	r25, r31
    103c:	96 60       	ori	r25, 0x06	; 6
    103e:	b9 2e       	mov	r11, r25
    1040:	06 c0       	rjmp	.+12     	; 0x104e <vfprintf+0x25c>
    1042:	28 e0       	ldi	r18, 0x08	; 8
    1044:	30 e0       	ldi	r19, 0x00	; 0
    1046:	05 c0       	rjmp	.+10     	; 0x1052 <vfprintf+0x260>
    1048:	20 e1       	ldi	r18, 0x10	; 16
    104a:	30 e0       	ldi	r19, 0x00	; 0
    104c:	02 c0       	rjmp	.+4      	; 0x1052 <vfprintf+0x260>
    104e:	20 e1       	ldi	r18, 0x10	; 16
    1050:	32 e0       	ldi	r19, 0x02	; 2
    1052:	f8 01       	movw	r30, r16
    1054:	b7 fe       	sbrs	r11, 7
    1056:	07 c0       	rjmp	.+14     	; 0x1066 <vfprintf+0x274>
    1058:	60 81       	ld	r22, Z
    105a:	71 81       	ldd	r23, Z+1	; 0x01
    105c:	82 81       	ldd	r24, Z+2	; 0x02
    105e:	93 81       	ldd	r25, Z+3	; 0x03
    1060:	0c 5f       	subi	r16, 0xFC	; 252
    1062:	1f 4f       	sbci	r17, 0xFF	; 255
    1064:	06 c0       	rjmp	.+12     	; 0x1072 <vfprintf+0x280>
    1066:	60 81       	ld	r22, Z
    1068:	71 81       	ldd	r23, Z+1	; 0x01
    106a:	80 e0       	ldi	r24, 0x00	; 0
    106c:	90 e0       	ldi	r25, 0x00	; 0
    106e:	0e 5f       	subi	r16, 0xFE	; 254
    1070:	1f 4f       	sbci	r17, 0xFF	; 255
    1072:	a4 01       	movw	r20, r8
    1074:	0e 94 13 09 	call	0x1226	; 0x1226 <__ultoa_invert>
    1078:	a8 2e       	mov	r10, r24
    107a:	a8 18       	sub	r10, r8
    107c:	fb 2d       	mov	r31, r11
    107e:	ff 77       	andi	r31, 0x7F	; 127
    1080:	bf 2e       	mov	r11, r31
    1082:	b6 fe       	sbrs	r11, 6
    1084:	0b c0       	rjmp	.+22     	; 0x109c <vfprintf+0x2aa>
    1086:	2b 2d       	mov	r18, r11
    1088:	2e 7f       	andi	r18, 0xFE	; 254
    108a:	a5 14       	cp	r10, r5
    108c:	50 f4       	brcc	.+20     	; 0x10a2 <vfprintf+0x2b0>
    108e:	b4 fe       	sbrs	r11, 4
    1090:	0a c0       	rjmp	.+20     	; 0x10a6 <vfprintf+0x2b4>
    1092:	b2 fc       	sbrc	r11, 2
    1094:	08 c0       	rjmp	.+16     	; 0x10a6 <vfprintf+0x2b4>
    1096:	2b 2d       	mov	r18, r11
    1098:	2e 7e       	andi	r18, 0xEE	; 238
    109a:	05 c0       	rjmp	.+10     	; 0x10a6 <vfprintf+0x2b4>
    109c:	7a 2c       	mov	r7, r10
    109e:	2b 2d       	mov	r18, r11
    10a0:	03 c0       	rjmp	.+6      	; 0x10a8 <vfprintf+0x2b6>
    10a2:	7a 2c       	mov	r7, r10
    10a4:	01 c0       	rjmp	.+2      	; 0x10a8 <vfprintf+0x2b6>
    10a6:	75 2c       	mov	r7, r5
    10a8:	24 ff       	sbrs	r18, 4
    10aa:	0d c0       	rjmp	.+26     	; 0x10c6 <vfprintf+0x2d4>
    10ac:	fe 01       	movw	r30, r28
    10ae:	ea 0d       	add	r30, r10
    10b0:	f1 1d       	adc	r31, r1
    10b2:	80 81       	ld	r24, Z
    10b4:	80 33       	cpi	r24, 0x30	; 48
    10b6:	11 f4       	brne	.+4      	; 0x10bc <vfprintf+0x2ca>
    10b8:	29 7e       	andi	r18, 0xE9	; 233
    10ba:	09 c0       	rjmp	.+18     	; 0x10ce <vfprintf+0x2dc>
    10bc:	22 ff       	sbrs	r18, 2
    10be:	06 c0       	rjmp	.+12     	; 0x10cc <vfprintf+0x2da>
    10c0:	73 94       	inc	r7
    10c2:	73 94       	inc	r7
    10c4:	04 c0       	rjmp	.+8      	; 0x10ce <vfprintf+0x2dc>
    10c6:	82 2f       	mov	r24, r18
    10c8:	86 78       	andi	r24, 0x86	; 134
    10ca:	09 f0       	breq	.+2      	; 0x10ce <vfprintf+0x2dc>
    10cc:	73 94       	inc	r7
    10ce:	23 fd       	sbrc	r18, 3
    10d0:	13 c0       	rjmp	.+38     	; 0x10f8 <vfprintf+0x306>
    10d2:	20 ff       	sbrs	r18, 0
    10d4:	06 c0       	rjmp	.+12     	; 0x10e2 <vfprintf+0x2f0>
    10d6:	5a 2c       	mov	r5, r10
    10d8:	73 14       	cp	r7, r3
    10da:	18 f4       	brcc	.+6      	; 0x10e2 <vfprintf+0x2f0>
    10dc:	53 0c       	add	r5, r3
    10de:	57 18       	sub	r5, r7
    10e0:	73 2c       	mov	r7, r3
    10e2:	73 14       	cp	r7, r3
    10e4:	68 f4       	brcc	.+26     	; 0x1100 <vfprintf+0x30e>
    10e6:	b7 01       	movw	r22, r14
    10e8:	80 e2       	ldi	r24, 0x20	; 32
    10ea:	90 e0       	ldi	r25, 0x00	; 0
    10ec:	2c 87       	std	Y+12, r18	; 0x0c
    10ee:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <fputc>
    10f2:	73 94       	inc	r7
    10f4:	2c 85       	ldd	r18, Y+12	; 0x0c
    10f6:	f5 cf       	rjmp	.-22     	; 0x10e2 <vfprintf+0x2f0>
    10f8:	73 14       	cp	r7, r3
    10fa:	10 f4       	brcc	.+4      	; 0x1100 <vfprintf+0x30e>
    10fc:	37 18       	sub	r3, r7
    10fe:	01 c0       	rjmp	.+2      	; 0x1102 <vfprintf+0x310>
    1100:	31 2c       	mov	r3, r1
    1102:	24 ff       	sbrs	r18, 4
    1104:	12 c0       	rjmp	.+36     	; 0x112a <vfprintf+0x338>
    1106:	b7 01       	movw	r22, r14
    1108:	80 e3       	ldi	r24, 0x30	; 48
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	2c 87       	std	Y+12, r18	; 0x0c
    110e:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <fputc>
    1112:	2c 85       	ldd	r18, Y+12	; 0x0c
    1114:	22 ff       	sbrs	r18, 2
    1116:	17 c0       	rjmp	.+46     	; 0x1146 <vfprintf+0x354>
    1118:	21 ff       	sbrs	r18, 1
    111a:	03 c0       	rjmp	.+6      	; 0x1122 <vfprintf+0x330>
    111c:	88 e5       	ldi	r24, 0x58	; 88
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	02 c0       	rjmp	.+4      	; 0x1126 <vfprintf+0x334>
    1122:	88 e7       	ldi	r24, 0x78	; 120
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	b7 01       	movw	r22, r14
    1128:	0c c0       	rjmp	.+24     	; 0x1142 <vfprintf+0x350>
    112a:	82 2f       	mov	r24, r18
    112c:	86 78       	andi	r24, 0x86	; 134
    112e:	59 f0       	breq	.+22     	; 0x1146 <vfprintf+0x354>
    1130:	21 fd       	sbrc	r18, 1
    1132:	02 c0       	rjmp	.+4      	; 0x1138 <vfprintf+0x346>
    1134:	80 e2       	ldi	r24, 0x20	; 32
    1136:	01 c0       	rjmp	.+2      	; 0x113a <vfprintf+0x348>
    1138:	8b e2       	ldi	r24, 0x2B	; 43
    113a:	27 fd       	sbrc	r18, 7
    113c:	8d e2       	ldi	r24, 0x2D	; 45
    113e:	b7 01       	movw	r22, r14
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <fputc>
    1146:	a5 14       	cp	r10, r5
    1148:	38 f4       	brcc	.+14     	; 0x1158 <vfprintf+0x366>
    114a:	b7 01       	movw	r22, r14
    114c:	80 e3       	ldi	r24, 0x30	; 48
    114e:	90 e0       	ldi	r25, 0x00	; 0
    1150:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <fputc>
    1154:	5a 94       	dec	r5
    1156:	f7 cf       	rjmp	.-18     	; 0x1146 <vfprintf+0x354>
    1158:	aa 94       	dec	r10
    115a:	f4 01       	movw	r30, r8
    115c:	ea 0d       	add	r30, r10
    115e:	f1 1d       	adc	r31, r1
    1160:	80 81       	ld	r24, Z
    1162:	b7 01       	movw	r22, r14
    1164:	90 e0       	ldi	r25, 0x00	; 0
    1166:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <fputc>
    116a:	a1 10       	cpse	r10, r1
    116c:	f5 cf       	rjmp	.-22     	; 0x1158 <vfprintf+0x366>
    116e:	33 20       	and	r3, r3
    1170:	09 f4       	brne	.+2      	; 0x1174 <vfprintf+0x382>
    1172:	51 ce       	rjmp	.-862    	; 0xe16 <vfprintf+0x24>
    1174:	b7 01       	movw	r22, r14
    1176:	80 e2       	ldi	r24, 0x20	; 32
    1178:	90 e0       	ldi	r25, 0x00	; 0
    117a:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <fputc>
    117e:	3a 94       	dec	r3
    1180:	f6 cf       	rjmp	.-20     	; 0x116e <vfprintf+0x37c>
    1182:	f7 01       	movw	r30, r14
    1184:	86 81       	ldd	r24, Z+6	; 0x06
    1186:	97 81       	ldd	r25, Z+7	; 0x07
    1188:	02 c0       	rjmp	.+4      	; 0x118e <vfprintf+0x39c>
    118a:	8f ef       	ldi	r24, 0xFF	; 255
    118c:	9f ef       	ldi	r25, 0xFF	; 255
    118e:	2c 96       	adiw	r28, 0x0c	; 12
    1190:	e2 e1       	ldi	r30, 0x12	; 18
    1192:	0c 94 8d 09 	jmp	0x131a	; 0x131a <__epilogue_restores__>

00001196 <strnlen_P>:
    1196:	fc 01       	movw	r30, r24
    1198:	05 90       	lpm	r0, Z+
    119a:	61 50       	subi	r22, 0x01	; 1
    119c:	70 40       	sbci	r23, 0x00	; 0
    119e:	01 10       	cpse	r0, r1
    11a0:	d8 f7       	brcc	.-10     	; 0x1198 <strnlen_P+0x2>
    11a2:	80 95       	com	r24
    11a4:	90 95       	com	r25
    11a6:	8e 0f       	add	r24, r30
    11a8:	9f 1f       	adc	r25, r31
    11aa:	08 95       	ret

000011ac <strnlen>:
    11ac:	fc 01       	movw	r30, r24
    11ae:	61 50       	subi	r22, 0x01	; 1
    11b0:	70 40       	sbci	r23, 0x00	; 0
    11b2:	01 90       	ld	r0, Z+
    11b4:	01 10       	cpse	r0, r1
    11b6:	d8 f7       	brcc	.-10     	; 0x11ae <strnlen+0x2>
    11b8:	80 95       	com	r24
    11ba:	90 95       	com	r25
    11bc:	8e 0f       	add	r24, r30
    11be:	9f 1f       	adc	r25, r31
    11c0:	08 95       	ret

000011c2 <fputc>:
    11c2:	0f 93       	push	r16
    11c4:	1f 93       	push	r17
    11c6:	cf 93       	push	r28
    11c8:	df 93       	push	r29
    11ca:	18 2f       	mov	r17, r24
    11cc:	09 2f       	mov	r16, r25
    11ce:	eb 01       	movw	r28, r22
    11d0:	8b 81       	ldd	r24, Y+3	; 0x03
    11d2:	81 fd       	sbrc	r24, 1
    11d4:	03 c0       	rjmp	.+6      	; 0x11dc <fputc+0x1a>
    11d6:	8f ef       	ldi	r24, 0xFF	; 255
    11d8:	9f ef       	ldi	r25, 0xFF	; 255
    11da:	20 c0       	rjmp	.+64     	; 0x121c <fputc+0x5a>
    11dc:	82 ff       	sbrs	r24, 2
    11de:	10 c0       	rjmp	.+32     	; 0x1200 <fputc+0x3e>
    11e0:	4e 81       	ldd	r20, Y+6	; 0x06
    11e2:	5f 81       	ldd	r21, Y+7	; 0x07
    11e4:	2c 81       	ldd	r18, Y+4	; 0x04
    11e6:	3d 81       	ldd	r19, Y+5	; 0x05
    11e8:	42 17       	cp	r20, r18
    11ea:	53 07       	cpc	r21, r19
    11ec:	7c f4       	brge	.+30     	; 0x120c <fputc+0x4a>
    11ee:	e8 81       	ld	r30, Y
    11f0:	f9 81       	ldd	r31, Y+1	; 0x01
    11f2:	9f 01       	movw	r18, r30
    11f4:	2f 5f       	subi	r18, 0xFF	; 255
    11f6:	3f 4f       	sbci	r19, 0xFF	; 255
    11f8:	39 83       	std	Y+1, r19	; 0x01
    11fa:	28 83       	st	Y, r18
    11fc:	10 83       	st	Z, r17
    11fe:	06 c0       	rjmp	.+12     	; 0x120c <fputc+0x4a>
    1200:	e8 85       	ldd	r30, Y+8	; 0x08
    1202:	f9 85       	ldd	r31, Y+9	; 0x09
    1204:	81 2f       	mov	r24, r17
    1206:	09 95       	icall
    1208:	89 2b       	or	r24, r25
    120a:	29 f7       	brne	.-54     	; 0x11d6 <fputc+0x14>
    120c:	2e 81       	ldd	r18, Y+6	; 0x06
    120e:	3f 81       	ldd	r19, Y+7	; 0x07
    1210:	2f 5f       	subi	r18, 0xFF	; 255
    1212:	3f 4f       	sbci	r19, 0xFF	; 255
    1214:	3f 83       	std	Y+7, r19	; 0x07
    1216:	2e 83       	std	Y+6, r18	; 0x06
    1218:	81 2f       	mov	r24, r17
    121a:	90 2f       	mov	r25, r16
    121c:	df 91       	pop	r29
    121e:	cf 91       	pop	r28
    1220:	1f 91       	pop	r17
    1222:	0f 91       	pop	r16
    1224:	08 95       	ret

00001226 <__ultoa_invert>:
    1226:	fa 01       	movw	r30, r20
    1228:	aa 27       	eor	r26, r26
    122a:	28 30       	cpi	r18, 0x08	; 8
    122c:	51 f1       	breq	.+84     	; 0x1282 <__ultoa_invert+0x5c>
    122e:	20 31       	cpi	r18, 0x10	; 16
    1230:	81 f1       	breq	.+96     	; 0x1292 <__ultoa_invert+0x6c>
    1232:	e8 94       	clt
    1234:	6f 93       	push	r22
    1236:	6e 7f       	andi	r22, 0xFE	; 254
    1238:	6e 5f       	subi	r22, 0xFE	; 254
    123a:	7f 4f       	sbci	r23, 0xFF	; 255
    123c:	8f 4f       	sbci	r24, 0xFF	; 255
    123e:	9f 4f       	sbci	r25, 0xFF	; 255
    1240:	af 4f       	sbci	r26, 0xFF	; 255
    1242:	b1 e0       	ldi	r27, 0x01	; 1
    1244:	3e d0       	rcall	.+124    	; 0x12c2 <__ultoa_invert+0x9c>
    1246:	b4 e0       	ldi	r27, 0x04	; 4
    1248:	3c d0       	rcall	.+120    	; 0x12c2 <__ultoa_invert+0x9c>
    124a:	67 0f       	add	r22, r23
    124c:	78 1f       	adc	r23, r24
    124e:	89 1f       	adc	r24, r25
    1250:	9a 1f       	adc	r25, r26
    1252:	a1 1d       	adc	r26, r1
    1254:	68 0f       	add	r22, r24
    1256:	79 1f       	adc	r23, r25
    1258:	8a 1f       	adc	r24, r26
    125a:	91 1d       	adc	r25, r1
    125c:	a1 1d       	adc	r26, r1
    125e:	6a 0f       	add	r22, r26
    1260:	71 1d       	adc	r23, r1
    1262:	81 1d       	adc	r24, r1
    1264:	91 1d       	adc	r25, r1
    1266:	a1 1d       	adc	r26, r1
    1268:	20 d0       	rcall	.+64     	; 0x12aa <__ultoa_invert+0x84>
    126a:	09 f4       	brne	.+2      	; 0x126e <__ultoa_invert+0x48>
    126c:	68 94       	set
    126e:	3f 91       	pop	r19
    1270:	2a e0       	ldi	r18, 0x0A	; 10
    1272:	26 9f       	mul	r18, r22
    1274:	11 24       	eor	r1, r1
    1276:	30 19       	sub	r19, r0
    1278:	30 5d       	subi	r19, 0xD0	; 208
    127a:	31 93       	st	Z+, r19
    127c:	de f6       	brtc	.-74     	; 0x1234 <__ultoa_invert+0xe>
    127e:	cf 01       	movw	r24, r30
    1280:	08 95       	ret
    1282:	46 2f       	mov	r20, r22
    1284:	47 70       	andi	r20, 0x07	; 7
    1286:	40 5d       	subi	r20, 0xD0	; 208
    1288:	41 93       	st	Z+, r20
    128a:	b3 e0       	ldi	r27, 0x03	; 3
    128c:	0f d0       	rcall	.+30     	; 0x12ac <__ultoa_invert+0x86>
    128e:	c9 f7       	brne	.-14     	; 0x1282 <__ultoa_invert+0x5c>
    1290:	f6 cf       	rjmp	.-20     	; 0x127e <__ultoa_invert+0x58>
    1292:	46 2f       	mov	r20, r22
    1294:	4f 70       	andi	r20, 0x0F	; 15
    1296:	40 5d       	subi	r20, 0xD0	; 208
    1298:	4a 33       	cpi	r20, 0x3A	; 58
    129a:	18 f0       	brcs	.+6      	; 0x12a2 <__ultoa_invert+0x7c>
    129c:	49 5d       	subi	r20, 0xD9	; 217
    129e:	31 fd       	sbrc	r19, 1
    12a0:	40 52       	subi	r20, 0x20	; 32
    12a2:	41 93       	st	Z+, r20
    12a4:	02 d0       	rcall	.+4      	; 0x12aa <__ultoa_invert+0x84>
    12a6:	a9 f7       	brne	.-22     	; 0x1292 <__ultoa_invert+0x6c>
    12a8:	ea cf       	rjmp	.-44     	; 0x127e <__ultoa_invert+0x58>
    12aa:	b4 e0       	ldi	r27, 0x04	; 4
    12ac:	a6 95       	lsr	r26
    12ae:	97 95       	ror	r25
    12b0:	87 95       	ror	r24
    12b2:	77 95       	ror	r23
    12b4:	67 95       	ror	r22
    12b6:	ba 95       	dec	r27
    12b8:	c9 f7       	brne	.-14     	; 0x12ac <__ultoa_invert+0x86>
    12ba:	00 97       	sbiw	r24, 0x00	; 0
    12bc:	61 05       	cpc	r22, r1
    12be:	71 05       	cpc	r23, r1
    12c0:	08 95       	ret
    12c2:	9b 01       	movw	r18, r22
    12c4:	ac 01       	movw	r20, r24
    12c6:	0a 2e       	mov	r0, r26
    12c8:	06 94       	lsr	r0
    12ca:	57 95       	ror	r21
    12cc:	47 95       	ror	r20
    12ce:	37 95       	ror	r19
    12d0:	27 95       	ror	r18
    12d2:	ba 95       	dec	r27
    12d4:	c9 f7       	brne	.-14     	; 0x12c8 <__ultoa_invert+0xa2>
    12d6:	62 0f       	add	r22, r18
    12d8:	73 1f       	adc	r23, r19
    12da:	84 1f       	adc	r24, r20
    12dc:	95 1f       	adc	r25, r21
    12de:	a0 1d       	adc	r26, r0
    12e0:	08 95       	ret

000012e2 <__prologue_saves__>:
    12e2:	2f 92       	push	r2
    12e4:	3f 92       	push	r3
    12e6:	4f 92       	push	r4
    12e8:	5f 92       	push	r5
    12ea:	6f 92       	push	r6
    12ec:	7f 92       	push	r7
    12ee:	8f 92       	push	r8
    12f0:	9f 92       	push	r9
    12f2:	af 92       	push	r10
    12f4:	bf 92       	push	r11
    12f6:	cf 92       	push	r12
    12f8:	df 92       	push	r13
    12fa:	ef 92       	push	r14
    12fc:	ff 92       	push	r15
    12fe:	0f 93       	push	r16
    1300:	1f 93       	push	r17
    1302:	cf 93       	push	r28
    1304:	df 93       	push	r29
    1306:	cd b7       	in	r28, 0x3d	; 61
    1308:	de b7       	in	r29, 0x3e	; 62
    130a:	ca 1b       	sub	r28, r26
    130c:	db 0b       	sbc	r29, r27
    130e:	0f b6       	in	r0, 0x3f	; 63
    1310:	f8 94       	cli
    1312:	de bf       	out	0x3e, r29	; 62
    1314:	0f be       	out	0x3f, r0	; 63
    1316:	cd bf       	out	0x3d, r28	; 61
    1318:	09 94       	ijmp

0000131a <__epilogue_restores__>:
    131a:	2a 88       	ldd	r2, Y+18	; 0x12
    131c:	39 88       	ldd	r3, Y+17	; 0x11
    131e:	48 88       	ldd	r4, Y+16	; 0x10
    1320:	5f 84       	ldd	r5, Y+15	; 0x0f
    1322:	6e 84       	ldd	r6, Y+14	; 0x0e
    1324:	7d 84       	ldd	r7, Y+13	; 0x0d
    1326:	8c 84       	ldd	r8, Y+12	; 0x0c
    1328:	9b 84       	ldd	r9, Y+11	; 0x0b
    132a:	aa 84       	ldd	r10, Y+10	; 0x0a
    132c:	b9 84       	ldd	r11, Y+9	; 0x09
    132e:	c8 84       	ldd	r12, Y+8	; 0x08
    1330:	df 80       	ldd	r13, Y+7	; 0x07
    1332:	ee 80       	ldd	r14, Y+6	; 0x06
    1334:	fd 80       	ldd	r15, Y+5	; 0x05
    1336:	0c 81       	ldd	r16, Y+4	; 0x04
    1338:	1b 81       	ldd	r17, Y+3	; 0x03
    133a:	aa 81       	ldd	r26, Y+2	; 0x02
    133c:	b9 81       	ldd	r27, Y+1	; 0x01
    133e:	ce 0f       	add	r28, r30
    1340:	d1 1d       	adc	r29, r1
    1342:	0f b6       	in	r0, 0x3f	; 63
    1344:	f8 94       	cli
    1346:	de bf       	out	0x3e, r29	; 62
    1348:	0f be       	out	0x3f, r0	; 63
    134a:	cd bf       	out	0x3d, r28	; 61
    134c:	ed 01       	movw	r28, r26
    134e:	08 95       	ret

00001350 <_exit>:
    1350:	f8 94       	cli

00001352 <__stop_program>:
    1352:	ff cf       	rjmp	.-2      	; 0x1352 <__stop_program>
